<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="gisinfo">



	<typeAlias alias="GisBasicVO"
		type="egovframework.zaol.gisinfo.service.GisBasicVO" />
	<typeAlias alias="GisUserVO"
		type="egovframework.zaol.gisinfo.service.GisUserVO" />
	<typeAlias alias="GisBookMarkVO"
		type="egovframework.zaol.gisinfo.service.GisBookMarkVO" />

	<!-- 코드 조회 -->
	<select id="gisinfoDAO.gis_code_list"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/* 분류 코드 조회 - 공통 */
		SELECT * FROM public.sh_code ORDER BY type, code ASC
	</select>
	
	<!-- 개별 부모 코드 조회 신규 작성 20240807 LEK -->
	<select id="gisinfoDAO.pCode_list" parameterClass="HashMap" resultClass="java.util.HashMap" >
	/* 분류 부모 코드 개별 조회 - 공통 */
	/* tc_brmp 코드분류체계 통일 tc_brmp -> tc_brmp로 변경바람 */
		select mlsfc as pLabel
				,mlsfc_code as pCode
		from landsys_adm.tc_brmp 
		where lclas_code = #code# 
		group by
			 mlsfc, mlsfc_code 
		order by 
			mlsfc
	</select>
	
	<!-- 개별 자식 코드 조회 신규 작성 20240807 LEK -->
	<select id="gisinfoDAO.sCode_list" parameterClass="HashMap" resultClass="java.util.HashMap" >
	/* 분류 자식 코드 개별 조회 - 공통 */
	/* tc_brmp 코드분류체계 통일 tc_brmp -> tc_brmp로 변경바람 */
		select sclas as sLabel
				,sclas_code as sCode
		from landsys_adm.tc_brmp 
		where mlsfc_code = #sCode# 
 			and lclas_code =  #code#
		order by 
			sclas
	</select>

	<!-- 시도 리스트 조회 신규 작성 20240807 LEK -->
	<select id="gisinfoDAO.sido_list" parameterClass="GisBasicVO"
		resultClass="java.util.HashMap">
		SELECT
		ctprvn_code as sido_cd,
		ctprvn_code_nm as sido_kor_nm,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y
		FROM landsys_gis.ctprvn_administ_bndry_cd ORDER BY sido_kor_nm ASC
	</select>
	
	<!-- 시군구 리스트 조회 -->
	<select id="gisinfoDAO.sig_list" parameterClass="GisBasicVO"
		resultClass="java.util.HashMap">
		SELECT
		signgu_code as sig_cd,
		signgu_nm as sig_kor_nm,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y
		FROM landsys_gis.signgu_administ_bndry_cd 
		WHERE 1=1
		<isNotEmpty prepend="AND" property="sido_cd"> 
			LEFT(signgu_code,2) =#sido_cd# 
		</isNotEmpty>
		order by sig_kor_nm
	</select>
	<!-- 읍면동 리스트 조회 -->
	<select id="gisinfoDAO.emd_list" parameterClass="GisBasicVO"
		resultClass="java.util.HashMap">
		SELECT
		emd_code as emd_cd,
		emd_code_nm as emd_kor_nm,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y
		FROM landsys_gis.emd_administ_bndry_cd
		WHERE 1=1
		<isNotEmpty prepend="AND" property="emd"> 
			LEFT(emd_code,5) =	#emd# </isNotEmpty>
		ORDER BY emd_code_nm ASC
	</select>

	<!-- 지번 리스트 조회 -->
	<select id="gisinfoDAO.jibun_list" parameterClass="HashMap"
		resultClass="java.util.HashMap">
		SELECT adres as addr,
		'' as jibun2,
		ST_X(ST_centroid(the_geom)) as addr_x,
		ST_Y(ST_centroid(the_geom)) as addr_y,
		ST_AsText(the_geom) AS geom
		FROM landsys_gis.ctnu_lgstr_su
		WHERE 1=1
		AND signgu_code = #sgg#
		AND lnm_2 LIKE #jibun#||'%'
		ORDER BY adres
	</select>
	<!-- AND pnu LIKE #sgg#||#san#||'%' -->

	<!-- 중분류 리스트 조회 -->
	<select id="gisinfoDAO.gb02_list" parameterClass="GisBasicVO"
		resultClass="java.util.HashMap">
		<isEqual property="sh_kind" compareValue="01">
			<isEqual property="kind" compareValue="01">
				/*========== 도시재생활성화지역 ==========*/
				<!-- 완료(데이터 값이 변경 됌) -->
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT business_type AS nm FROM data_city_activation
				GROUP BY business_type ORDER BY business_type ) A
			</isEqual>
			<isEqual property="kind" compareValue="02">/*========== 주거환경관리사업구역
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT prtn_step AS nm FROM landsys_gis.reside_envrn_manage_bsns
				GROUP BY prtn_step ORDER BY prtn_step ) A
			</isEqual>
			<isEqual property="kind" compareValue="03">/*========== 희망지
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT hope_plot_bsns_knd AS nm FROM landsys_gis.hope_area_bsns
				GROUP BY hope_plot_bsns_knd ORDER BY hope_plot_bsns_knd ) A
			</isEqual>
			<isEqual property="kind" compareValue="04">/*========== 해제지역
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT relis_zone_ty AS nm FROM landsys_gis.relis_area
				WHERE relis_zone_ty IS NOT NULL /* null 여부 확인 후 삭제 */
				GROUP BY relis_zone_ty ORDER BY relis_zone_ty ) A
			</isEqual>
		</isEqual>
		<isEqual property="sh_kind" compareValue="02">
			<isEqual property="kind" compareValue="01">/*========== 근린
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT nghbrhd AS nm FROM landsys_gis.cty_reviv_spanuat_area_adstrd
				GROUP BY nghbrhd ORDER BY nghbrhd::integer ) A
			</isEqual>
			<isEqual property="kind" compareValue="02">/*========== 경제
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT ecnmy AS nm FROM landsys_gis.cty_reviv_spanuat_area_adstrd
				GROUP BY ecnmy ORDER BY ecnmy::integer ) A
			</isEqual>
			<isEqual property="kind" compareValue="03">/*========== 복합
				==========*/
				SELECT (ROW_NUMBER() OVER()) AS no, A.nm FROM (
				SELECT cmpnd AS nm FROM landsys_gis.cty_reviv_spanuat_area_adstrd
				GROUP BY cmpnd ORDER BY cmpnd ) A
			</isEqual>
		</isEqual>
		<isEqual property="sh_kind" compareValue="03">

		</isEqual>

	</select>
	<!-- 소분류 리스트 조회 -->
	<select id="gisinfoDAO.gb03_list" parameterClass="GisBasicVO"
		resultClass="java.util.HashMap">
		<isEqual property="sh_kind" compareValue="01">
			<isEqual property="kind" compareValue="01">
				/*========== 도시재생활성화지역 ==========*/
				<!-- 완료(데이터값이 변경됌) -->
				SELECT gid AS no, '['||area_name||'] '||location AS nm FROM
				data_city_activation
				WHERE business_type =
				<isEqual property="pk" compareValue="1">'근린재생 일반형'</isEqual>
				<isEqual property="pk" compareValue="2">'근린재생 중심시가지형'</isEqual>
				<isEqual property="pk" compareValue="3">'도시경제기반형'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isEqual>
			<isEqual property="kind" compareValue="02">
				/*========== 주거환경관리사업구역 ==========*/
				SELECT ogc_fid AS no,
				'['||bsns_zone_nm||'] '||lc AS nm FROM
				landsys_gis.reside_envrn_manage_bsns
				WHERE prtn_step =
				<isEqual property="pk" compareValue="1">'계획수립'</isEqual>
				<isEqual property="pk" compareValue="2">'설계/공사'</isEqual>
				<isEqual property="pk" compareValue="3">'완료'</isEqual>
				<isEqual property="pk" compareValue="4">'후보지'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isEqual>
			<isEqual property="kind" compareValue="03">
				/*========== 희망지 ==========*/
				SELECT ogc_fid AS no,
				'['||hope_plot_zone_nm||'] '||lc AS nm FROM
				landsys_gis.hope_area_bsns
				WHERE hope_plot_bsns_knd =
				<isEqual property="pk" compareValue="1">'도시재생활성화사업'</isEqual>
				<isEqual property="pk" compareValue="2">'주거환경관리사업'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isEqual>
			<isEqual property="kind" compareValue="04">
				/*========== 해제지역 ==========*/
				SELECT ogc_fid AS no,
				'['||relis_zone_nm||'] '||lc AS nm FROM landsys_gis.relis_area
				WHERE
				relis_zone_ty =
				<isEqual property="pk" compareValue="1">'도시환경(뉴타운)'</isEqual>
				<isEqual property="pk" compareValue="2">'재개발'</isEqual>
				<isEqual property="pk" compareValue="3">'재개발(뉴타운)'</isEqual>
				<isEqual property="pk" compareValue="4">'재건축'</isEqual>
				<isEqual property="pk" compareValue="5">'재건축(공동)'</isEqual>
				<isEqual property="pk" compareValue="6">'재건축(뉴타운)'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isEqual>
		</isEqual>
		<isEqual property="sh_kind" compareValue="02">
			<isEqual property="kind" compareValue="01">/*========== 근린
				==========*/
				SELECT ogc_fid AS no, adstrd_nm AS nm FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd
				WHERE nghbrhd = #pk#
				GROUP BY
				no, nm ORDER BY nm
			</isEqual>
			<isEqual property="kind" compareValue="02">/*========== 경제
				==========*/
				SELECT ogc_fid AS no, adstrd_nm AS nm FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd
				WHERE ecnmy = #pk#
				GROUP BY no,
				nm ORDER BY nm
			</isEqual>
			<isEqual property="kind" compareValue="03">
				/*========== 복합 ==========*/
				SELECT ogc_fid AS no, adstrd_nm AS nm
				FROM landsys_gis.cty_reviv_spanuat_area_adstrd
				WHERE cmpnd =
				<isEqual property="pk" compareValue="1">'O'</isEqual>
				<isEqual property="pk" compareValue="2">'X'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isEqual>
		</isEqual>
		<isEqual property="sh_kind" compareValue="03">
			<isNotEmpty property="pk">
				SELECT ogc_fid AS no, subway_nm AS nm FROM
				landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE subway_reprsnt_route =
				<isEqual property="pk" compareValue="01">'1호선'</isEqual>
				<isEqual property="pk" compareValue="02">'2호선'</isEqual>
				<isEqual property="pk" compareValue="03">'3호선'</isEqual>
				<isEqual property="pk" compareValue="04">'4호선'</isEqual>
				<isEqual property="pk" compareValue="05">'5호선'</isEqual>
				<isEqual property="pk" compareValue="06">'6호선'</isEqual>
				<isEqual property="pk" compareValue="07">'7호선'</isEqual>
				<isEqual property="pk" compareValue="08">'8호선'</isEqual>
				<isEqual property="pk" compareValue="09">'9호선'</isEqual>
				<isEqual property="pk" compareValue="10">'경의중앙선'</isEqual>
				<isEqual property="pk" compareValue="11">'분당선'</isEqual>
				<isEqual property="pk" compareValue="12">'신분당선'</isEqual>
				GROUP BY no, nm ORDER BY nm
			</isNotEmpty>
		</isEqual>
	</select>


	<!-- 즐겨찾기 조회 -->
	<select id="gisinfoDAO.gis_search_bookmark"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 완료(기존유지) -->
		/* 사용자별 즐겨찾기 조회 */
		SELECT * FROM public.tn_user_bookmark
		WHERE use_at =
		'Y' AND user_id = #user_id#
		<isNotEmpty prepend="AND" property="gid"> gid = (#gid#)::integer
		</isNotEmpty>
		ORDER BY gid
	</select>
	<!-- 즐겨찾기 수정 -->
	<update id="gisinfoDAO.gis_update_bookmark"
		parameterClass="GisBasicVO">
		<!-- 완료(기존유지) -->
		/* 사용자별 즐겨찾기 수정 */
		UPDATE public.tn_user_bookmark
		SET
		<isEmpty property="kind">kind = null,</isEmpty>
		<isNotEmpty property="kind"> kind = #kind#, </isNotEmpty>
		<isEmpty property="cnt_kind">cnt_kind = null,</isEmpty>
		<isNotEmpty property="cnt_kind"> cnt_kind = #cnt_kind#, </isNotEmpty>
		<isEmpty property="pnilp_1">pnilp_1 = null,</isEmpty>
		<isNotEmpty property="pnilp_1"> pnilp_1 = #pnilp_1#, </isNotEmpty>
		<isEmpty property="pnilp_2">pnilp_2 = null,</isEmpty>
		<isNotEmpty property="pnilp_2"> pnilp_2 = #pnilp_2#, </isNotEmpty>
		<isEmpty property="jimok">jimok = null,</isEmpty>
		<isNotEmpty property="jimok">
			jimok =
			<iterate property="jimok" open="(" close=")" conjunction=",">#jimok[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="parea_1">parea_1 = null,</isEmpty>
		<isNotEmpty property="parea_1"> parea_1 = #parea_1#, </isNotEmpty>
		<isEmpty property="parea_2">parea_2 = null,</isEmpty>
		<isNotEmpty property="parea_2"> parea_2 = #parea_2#, </isNotEmpty>
		<isEmpty property="spfc">spfc = null,</isEmpty>
		<isNotEmpty property="spfc">
			spfc =
			<iterate property="spfc" open="(" close=")" conjunction=",">#spfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="lad_use">land_use = null,</isEmpty>
		<isNotEmpty property="land_use">
			land_use =
			<iterate property="land_use" open="(" close=")"
				conjunction=",">#land_use[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="geo_hl">geo_hl = null,</isEmpty>
		<isNotEmpty property="geo_hl">
			geo_hl =
			<iterate property="geo_hl" open="(" close=")" conjunction=",">#geo_hl[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="geo_form">geo_form = null,</isEmpty>
		<isNotEmpty property="geo_form">
			geo_form =
			<iterate property="geo_form" open="(" close=")"
				conjunction=",">#geo_form[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="road_side">road_side = null,</isEmpty>
		<isNotEmpty property="road_side">
			road_side =
			<iterate property="road_side" open="(" close=")"
				conjunction=",">#road_side[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="prtown">prtown = null,</isEmpty>
		<isNotEmpty property="prtown">
			prtown =
			<iterate property="prtown" open="(" close=")" conjunction=",">#prtown[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="spcfc">spcfc = null,</isEmpty>
		<isNotEmpty property="spcfc">
			spcfc =
			<iterate property="spcfc" open="(" close=")" conjunction=",">#spcfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="cnflc_1">cnflc_1 = null,</isEmpty>
		<isNotEmpty property="cnflc_1"> cnflc_1 = #cnflc_1#, </isNotEmpty>
		<isEmpty property="cnflc_2">cnflc_2 = null,</isEmpty>
		<isNotEmpty property="cnflc_2"> cnflc_2 = #cnflc_2#, </isNotEmpty>
		<isEmpty property="guk_land">guk_land = null,</isEmpty>
		<isNotEmpty property="guk_land"> guk_land = #guk_land#, </isNotEmpty>
		<isEmpty property="guk_land_01">guk_land_01 = null,</isEmpty>
		<isNotEmpty property="guk_land_01"> guk_land_01 = #guk_land_01#,
		</isNotEmpty>
		<isEmpty property="guk_land_02">guk_land_02 = null,</isEmpty>
		<isNotEmpty property="guk_land_02"> guk_land_02 = #guk_land_02#,
		</isNotEmpty>
		<isEmpty property="guk_land_03">guk_land_03 = null,</isEmpty>
		<isNotEmpty property="guk_land_03"> guk_land_03 = #guk_land_03#,
		</isNotEmpty>
		<isEmpty property="guk_land_04">guk_land_04 = null,</isEmpty>
		<isNotEmpty property="guk_land_04"> guk_land_04 = #guk_land_04#,
		</isNotEmpty>
		<isEmpty property="tmseq_land">tmseq_land = null,</isEmpty>
		<isNotEmpty property="tmseq_land"> tmseq_land = #tmseq_land#,
		</isNotEmpty>
		<isEmpty property="tmseq_land_01">tmseq_land_01 = null,</isEmpty>
		<isNotEmpty property="tmseq_land_01"> tmseq_land_01 = #tmseq_land_01#,
		</isNotEmpty>
		<isEmpty property="tmseq_land_02">tmseq_land_02 = null,</isEmpty>
		<isNotEmpty property="tmseq_land_02"> tmseq_land_02 = #tmseq_land_02#,
		</isNotEmpty>
		<isEmpty property="region_land">region_land = null,</isEmpty>
		<isNotEmpty property="region_land"> region_land = #region_land#,
		</isNotEmpty>
		<isEmpty property="owned_city">owned_city = null,</isEmpty>
		<isNotEmpty property="owned_city"> owned_city = #owned_city#,
		</isNotEmpty>
		<isEmpty property="owned_city_01">owned_city_01 = null,</isEmpty>
		<isNotEmpty property="owned_city_01"> owned_city_01 = #owned_city_01#,
		</isNotEmpty>
		<isEmpty property="owned_city_02">owned_city_02 = null,</isEmpty>
		<isNotEmpty property="owned_city_02"> owned_city_02 = #owned_city_02#,
		</isNotEmpty>
		<isEmpty property="owned_guyu">owned_guyu = null,</isEmpty>
		<isNotEmpty property="owned_guyu"> owned_guyu = #owned_guyu#,
		</isNotEmpty>
		<isEmpty property="owned_guyu_01">owned_guyu_01 = null,</isEmpty>
		<isNotEmpty property="owned_guyu_01"> owned_guyu_01 = #owned_guyu_01#,
		</isNotEmpty>
		<isEmpty property="owned_guyu_02">owned_guyu_02 = null,</isEmpty>
		<isNotEmpty property="owned_guyu_02"> owned_guyu_02 = #owned_guyu_02#,
		</isNotEmpty>
		<isEmpty property="residual_land">residual_land = null,</isEmpty>
		<isNotEmpty property="residual_land"> residual_land = #residual_land#,
		</isNotEmpty>
		<isEmpty property="unsold_land">unsold_land = null,</isEmpty>
		<isNotEmpty property="unsold_land"> unsold_land = #unsold_land#,
		</isNotEmpty>
		<isEmpty property="invest">invest = null,</isEmpty>
		<isNotEmpty property="invest"> invest = #invest#, </isNotEmpty>
		<isEmpty property="public_site">public_site = null,</isEmpty>
		<isNotEmpty property="public_site"> public_site = #public_site#,
		</isNotEmpty>
		<isEmpty property="public_parking">public_parking = null,</isEmpty>
		<isNotEmpty property="public_parking"> public_parking = #public_parking#,
		</isNotEmpty>
		<isEmpty property="generations">generations = null,</isEmpty>
		<isNotEmpty property="generations"> generations = #generations#,
		</isNotEmpty>
		<isEmpty property="council_land">council_land = null,</isEmpty>
		<isNotEmpty property="council_land"> council_land = #council_land#,
		</isNotEmpty>
		<isEmpty property="minuse">minuse = null,</isEmpty>
		<isNotEmpty property="minuse"> minuse = #minuse#, </isNotEmpty>
		<isEmpty property="industry">industry = null,</isEmpty>
		<isNotEmpty property="industry"> industry = #industry#, </isNotEmpty>
		<isEmpty property="priority">priority = null,</isEmpty>
		<isNotEmpty property="priority"> priority = #priority#, </isNotEmpty>
		<isEmpty property="cp_date_1">cp_date_1 = null,</isEmpty>
		<isNotEmpty property="cp_date_1"> cp_date_1 = #cp_date_1#, </isNotEmpty>
		<isEmpty property="cp_date_2">cp_date_2 = null,</isEmpty>
		<isNotEmpty property="cp_date_2"> cp_date_2 = #cp_date_2#, </isNotEmpty>
		<isEmpty property="bildng_ar_1">bildng_ar_1 = null,</isEmpty>
		<isNotEmpty property="bildng_ar_1"> bildng_ar_1 = #bildng_ar_1#,
		</isNotEmpty>
		<isEmpty property="bildng_ar_2">bildng_ar_2 = null,</isEmpty>
		<isNotEmpty property="bildng_ar_2"> bildng_ar_2 = #bildng_ar_2#,
		</isNotEmpty>
		<isEmpty property="totar_1">totar_1 = null,</isEmpty>
		<isNotEmpty property="totar_1"> totar_1 = #totar_1#, </isNotEmpty>
		<isEmpty property="totar_2">totar_2 = null,</isEmpty>
		<isNotEmpty property="totar_2"> totar_2 = #totar_2#, </isNotEmpty>
		<isEmpty property="plot_ar_1">plot_ar_1 = null,</isEmpty>
		<isNotEmpty property="plot_ar_1"> plot_ar_1 = #plot_ar_1#, </isNotEmpty>
		<isEmpty property="plot_ar_2">plot_ar_2 = null,</isEmpty>
		<isNotEmpty property="plot_ar_2"> plot_ar_2 = #plot_ar_2#, </isNotEmpty>
		<isEmpty property="bdtldr_1">bdtldr_1 = null,</isEmpty>
		<isNotEmpty property="bdtldr_1"> bdtldr_1 = #bdtldr_1#, </isNotEmpty>
		<isEmpty property="bdtldr_2">bdtldr_2 = null,</isEmpty>
		<isNotEmpty property="bdtldr_2"> bdtldr_2 = #bdtldr_2#, </isNotEmpty>
		<isEmpty property="cpcty_rt_1">cpcty_rt_1 = null,</isEmpty>
		<isNotEmpty property="cpcty_rt_1"> cpcty_rt_1 = #cpcty_rt_1#,
		</isNotEmpty>
		<isEmpty property="cpcty_rt_2">cpcty_rt_2 = null,</isEmpty>
		<isNotEmpty property="cpcty_rt_2"> cpcty_rt_2 = #cpcty_rt_2#,
		</isNotEmpty>
		<isEmpty property="guk_buld">guk_buld = null,</isEmpty>
		<isNotEmpty property="guk_buld"> guk_buld = #guk_buld#, </isNotEmpty>
		<isEmpty property="guk_buld_01">guk_buld_01 = null,</isEmpty>
		<isNotEmpty property="guk_buld_01"> guk_buld_01 = #guk_buld_01#,
		</isNotEmpty>
		<isEmpty property="guk_buld_02">guk_buld_02 = null,</isEmpty>
		<isNotEmpty property="guk_buld_02"> guk_buld_02 = #guk_buld_02#,
		</isNotEmpty>
		<isEmpty property="guk_buld_03">guk_buld_03 = null,</isEmpty>
		<isNotEmpty property="guk_buld_03"> guk_buld_03 = #guk_buld_03#,
		</isNotEmpty>
		<isEmpty property="guk_buld_04">guk_buld_04 = null,</isEmpty>
		<isNotEmpty property="guk_buld_04"> guk_buld_04 = #guk_buld_04#,
		</isNotEmpty>
		<isEmpty property="tmseq_buld">tmseq_buld = null,</isEmpty>
		<isNotEmpty property="tmseq_buld"> tmseq_buld = #tmseq_buld#,
		</isNotEmpty>
		<isEmpty property="tmseq_buld_01">tmseq_buld_01 = null,</isEmpty>
		<isNotEmpty property="tmseq_buld_01"> tmseq_buld_01 = #tmseq_buld_01#,
		</isNotEmpty>
		<isEmpty property="tmseq_buld_02">tmseq_buld_02 = null,</isEmpty>
		<isNotEmpty property="tmseq_buld_02"> tmseq_buld_02 = #tmseq_buld_02#,
		</isNotEmpty>
		<isEmpty property="region_buld">region_buld = null,</isEmpty>
		<isNotEmpty property="region_buld"> region_buld = #region_buld#,
		</isNotEmpty>
		<isEmpty property="owned_region">owned_region = null,</isEmpty>
		<isNotEmpty property="owned_region"> owned_region = #owned_region#,
		</isNotEmpty>
		<isEmpty property="owned_region_01">owned_region_01 = null,</isEmpty>
		<isNotEmpty property="owned_region_01"> owned_region_01 = #owned_region_01#,
		</isNotEmpty>
		<isEmpty property="owned_region_02">owned_region_02 = null,</isEmpty>
		<isNotEmpty property="owned_region_02"> owned_region_02 = #owned_region_02#,
		</isNotEmpty>
		<isEmpty property="cynlst">cynlst = null,</isEmpty>
		<isNotEmpty property="cynlst"> cynlst = #cynlst#, </isNotEmpty>
		<isEmpty property="cynlst_01">cynlst_01 = null,</isEmpty>
		<isNotEmpty property="cynlst_01"> cynlst_01 = #cynlst_01#, </isNotEmpty>
		<isEmpty property="cynlst_02">cynlst_02 = null,</isEmpty>
		<isNotEmpty property="cynlst_02"> cynlst_02 = #cynlst_02#, </isNotEmpty>
		<isEmpty property="public_buld_a">public_buld_a = null,</isEmpty>
		<isNotEmpty property="public_buld_a"> public_buld_a = #public_buld_a#,
		</isNotEmpty>
		<isEmpty property="public_buld_b">public_buld_b = null,</isEmpty>
		<isNotEmpty property="public_buld_b"> public_buld_b = #public_buld_b#,
		</isNotEmpty>
		<isEmpty property="public_buld_c">public_buld_c = null,</isEmpty>
		<isNotEmpty property="public_buld_c"> public_buld_c = #public_buld_c#,
		</isNotEmpty>
		<isEmpty property="public_asbu">public_asbu = null,</isEmpty>
		<isNotEmpty property="public_asbu"> public_asbu = #public_asbu#,
		</isNotEmpty>
		<isEmpty property="purchase">purchase = null,</isEmpty>
		<isNotEmpty property="purchase"> purchase = #purchase#, </isNotEmpty>
		<isEmpty property="declining">declining = null,</isEmpty>
		<isNotEmpty property="declining"> declining = #declining#, </isNotEmpty>
		<isEmpty property="soldout">soldout = null,</isEmpty>
		<isNotEmpty property="soldout">
			soldout =
			<iterate property="soldout" open="(" close=")"
				conjunction=",">#soldout[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="sector">sector = null,</isEmpty>
		<isNotEmpty property="sector">
			sector =
			<iterate property="sector" open="(" close=")" conjunction=",">#sector[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="spkfc">spkfc = null,</isEmpty>
		<isNotEmpty property="spkfc">
			spkfc =
			<iterate property="spkfc" open="(" close=")" conjunction=",">#spkfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="fill_gb">fill_gb = null,</isEmpty>
		<isNotEmpty property="fill_gb">
			fill_gb =
			<iterate property="fill_gb" open="(" close=")"
				conjunction=",">#fill_gb[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="useu">useu = null,</isEmpty>
		<isNotEmpty property="useu">
			useu =
			<iterate property="useu" open="(" close=")" conjunction=",">#useu[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="uses">uses = null,</isEmpty>
		<isNotEmpty property="uses">
			uses =
			<iterate property="uses" open="(" close=")" conjunction=",">#uses[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="sector_nm">sector_nm = null,</isEmpty>
		<isNotEmpty property="sector_nm"> sector_nm = #sector_nm#, </isNotEmpty>
		<isEmpty property="solar_1">solar_1 = null,</isEmpty>
		<isNotEmpty property="solar_1"> solar_1 = #solar_1#, </isNotEmpty>
		<isEmpty property="solar_2">solar_2 = null,</isEmpty>
		<isNotEmpty property="solar_2"> solar_2 = #solar_2#, </isNotEmpty>
		<isEmpty property="hbdtldr_1">hbdtldr_1 = null,</isEmpty>
		<isNotEmpty property="hbdtldr_1"> hbdtldr_1 = #hbdtldr_1#, </isNotEmpty>
		<isEmpty property="hbdtldr_2">hbdtldr_2 = null,</isEmpty>
		<isNotEmpty property="hbdtldr_2"> hbdtldr_2 = #hbdtldr_2#, </isNotEmpty>
		<isEmpty property="hcpcty_rt_1">hcpcty_rt_1 = null,</isEmpty>
		<isNotEmpty property="hcpcty_rt_1"> hcpcty_rt_1 = #hcpcty_rt_1#,
		</isNotEmpty>
		<isEmpty property="hcpcty_rt_2">hcpcty_rt_2 = null,</isEmpty>
		<isNotEmpty property="hcpcty_rt_2"> hcpcty_rt_2 = #hcpcty_rt_2#,
		</isNotEmpty>
		<isEmpty property="hg_limit">hg_limit = null,</isEmpty>
		<isNotEmpty property="hg_limit"> hg_limit = #hg_limit#, </isNotEmpty>
		<isEmpty property="taruse">taruse = null,</isEmpty>
		<isNotEmpty property="taruse"> taruse = #taruse#, </isNotEmpty>
		<isEmpty property="soldkind">soldkind = null,</isEmpty>
		<isNotEmpty property="soldkind"> soldkind = #soldkind#, </isNotEmpty>
		<isEmpty property="soldgb">soldgb = null,</isEmpty>
		<isNotEmpty property="soldgb">
			soldgb =
			<iterate property="soldgb" open="(" close=")" conjunction=",">#soldgb[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="residual">residual = null,</isEmpty>
		<isNotEmpty property="residual"> residual = #residual#, </isNotEmpty>
		<isEmpty property="unsold">unsold = null,</isEmpty>
		<isNotEmpty property="unsold"> unsold = #unsold#, </isNotEmpty>
		<isEmpty property="gb">gb = null,</isEmpty>
		<isNotEmpty property="gb">
			gb =
			<iterate property="gb" open="(" close=")" conjunction=",">#gb[]#
			</iterate>
			,
		</isNotEmpty>
		<isEmpty property="gbname">gbname = null,</isEmpty>
		<isNotEmpty property="gbname"> gbname = #gbname#, </isNotEmpty>
		<isEmpty property="sig">sig = null,</isEmpty>
		<isNotEmpty property="sig"> sig = #sig#, </isNotEmpty>
		<isEmpty property="emd">emd = null,</isEmpty>
		<isNotEmpty property="emd"> emd = #emd#, </isNotEmpty>
		<isEmpty property="sel">sel = null,</isEmpty>
		<isNotEmpty property="sel"> sel = #sel#, </isNotEmpty>
		<isEmpty property="space_gb">space_gb = null,</isEmpty>
		<isNotEmpty property="space_gb">
			space_gb =
			<iterate property="space_gb" open="(" close=")"
				conjunction=",">#space_gb[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="space_gb_cd02">space_gb_cd02 = null,</isEmpty>
		<isNotEmpty property="space_gb_cd02">
			space_gb_cd02 =
			<iterate property="space_gb_cd02" open="(" close=")"
				conjunction=",">#space_gb_cd02[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="space_gb_cd03">space_gb_cd03 = null,</isEmpty>
		<isNotEmpty property="space_gb_cd03">
			space_gb_cd03 =
			<iterate property="space_gb_cd03" open="(" close=")"
				conjunction=",">#space_gb_cd03[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="sub_p_decline_gb">sub_p_decline_gb = null,</isEmpty>
		<isNotEmpty property="sub_p_decline_gb"> sub_p_decline_gb =
			#sub_p_decline_gb#, </isNotEmpty>
		<isEmpty property="sub_p_decline_val">sub_p_decline_val = null,</isEmpty>
		<isNotEmpty property="sub_p_decline_val">
			sub_p_decline_val =
			<iterate property="sub_p_decline_val" open="(" close=")"
				conjunction=",">#sub_p_decline_val[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="sub_p_decline">sub_p_decline = null,</isEmpty>
		<isNotEmpty property="sub_p_decline">
			sub_p_decline =
			<iterate property="sub_p_decline" open="(" close=")"
				conjunction=",">#sub_p_decline[]#</iterate>
			,
		</isNotEmpty>
		<isEmpty property="public_transport_val">public_transport_val = null,</isEmpty>
		<isNotEmpty property="public_transport_val"> public_transport_val =
			#public_transport_val#, </isNotEmpty>
		<isEmpty property="public_transport">public_transport = null,</isEmpty>
		<isNotEmpty property="public_transport">
			public_transport =
			<iterate property="public_transport" open="(" close=")"
				conjunction=",">#public_transport[]#</iterate>
			,
		</isNotEmpty>

		bookmark_nm = #bookmark_nm#
		WHERE user_id = #user_id# AND gid = (#gid#)::integer
	</update>
	<!-- 즐겨찾기 등록 -->
	<insert id="gisinfoDAO.gis_insert_bookmark"
		parameterClass="GisBasicVO">
		<selectKey resultClass="java.lang.String" keyProperty="gid">
			<!-- 완료(기존유지) -->
			/* 일렬번호 생성 */
			SELECT COALESCE(MAX(gid), 0) + 1 AS gid FROM public.tn_user_bookmark WHERE
			user_id = #user_id#
		</selectKey>
		<!-- 완료(기존유지) -->
		/* 사용자별 즐겨찾기 등록 */
		INSERT INTO public.tn_user_bookmark
		(
		<isNotEmpty property="kind"> kind, </isNotEmpty>
		<isNotEmpty property="cnt_kind"> cnt_kind, </isNotEmpty>
		<isNotEmpty property="pnilp_1"> pnilp_1, </isNotEmpty>
		<isNotEmpty property="pnilp_2"> pnilp_2, </isNotEmpty>
		<isNotEmpty property="jimok"> jimok, </isNotEmpty>
		<isNotEmpty property="parea_1"> parea_1, </isNotEmpty>
		<isNotEmpty property="parea_2"> parea_2, </isNotEmpty>
		<isNotEmpty property="spfc"> spfc, </isNotEmpty>
		<isNotEmpty property="land_use"> land_use, </isNotEmpty>
		<isNotEmpty property="geo_hl"> geo_hl, </isNotEmpty>
		<isNotEmpty property="geo_form"> geo_form, </isNotEmpty>
		<isNotEmpty property="road_side"> road_side, </isNotEmpty>
		<isNotEmpty property="prtown"> prtown, </isNotEmpty>
		<isNotEmpty property="spcfc"> spcfc, </isNotEmpty>
		<isNotEmpty property="cnflc_1"> cnflc_1, </isNotEmpty>
		<isNotEmpty property="cnflc_2"> cnflc_2, </isNotEmpty>
		<isNotEmpty property="guk_land"> guk_land, </isNotEmpty>
		<isNotEmpty property="guk_land_01"> guk_land_01, </isNotEmpty>
		<isNotEmpty property="guk_land_02"> guk_land_02, </isNotEmpty>
		<isNotEmpty property="guk_land_03"> guk_land_03, </isNotEmpty>
		<isNotEmpty property="guk_land_04"> guk_land_04, </isNotEmpty>
		<isNotEmpty property="tmseq_land"> tmseq_land, </isNotEmpty>
		<isNotEmpty property="tmseq_land_01"> tmseq_land_01, </isNotEmpty>
		<isNotEmpty property="tmseq_land_02"> tmseq_land_02, </isNotEmpty>
		<isNotEmpty property="region_land"> region_land, </isNotEmpty>
		<isNotEmpty property="owned_city"> owned_city, </isNotEmpty>
		<isNotEmpty property="owned_city_01"> owned_city_01, </isNotEmpty>
		<isNotEmpty property="owned_city_02"> owned_city_02, </isNotEmpty>
		<isNotEmpty property="owned_guyu"> owned_guyu, </isNotEmpty>
		<isNotEmpty property="owned_guyu_01"> owned_guyu_01, </isNotEmpty>
		<isNotEmpty property="owned_guyu_02"> owned_guyu_02, </isNotEmpty>
		<isNotEmpty property="residual_land"> residual_land, </isNotEmpty>
		<isNotEmpty property="unsold_land"> unsold_land, </isNotEmpty>
		<isNotEmpty property="invest"> invest, </isNotEmpty>
		<isNotEmpty property="public_site"> public_site, </isNotEmpty>
		<isNotEmpty property="public_parking"> public_parking, </isNotEmpty>
		<isNotEmpty property="generations"> generations, </isNotEmpty>
		<isNotEmpty property="council_land"> council_land, </isNotEmpty>
		<isNotEmpty property="minuse"> minuse, </isNotEmpty>
		<isNotEmpty property="industry"> industry, </isNotEmpty>
		<isNotEmpty property="priority"> priority, </isNotEmpty>
		<isNotEmpty property="cp_date_1"> cp_date_1, </isNotEmpty>
		<isNotEmpty property="cp_date_2"> cp_date_2, </isNotEmpty>
		<isNotEmpty property="bildng_ar_1"> bildng_ar_1, </isNotEmpty>
		<isNotEmpty property="bildng_ar_2"> bildng_ar_2, </isNotEmpty>
		<isNotEmpty property="totar_1"> totar_1, </isNotEmpty>
		<isNotEmpty property="totar_2"> totar_2, </isNotEmpty>
		<isNotEmpty property="plot_ar_1"> plot_ar_1, </isNotEmpty>
		<isNotEmpty property="plot_ar_2"> plot_ar_2, </isNotEmpty>
		<isNotEmpty property="bdtldr_1"> bdtldr_1, </isNotEmpty>
		<isNotEmpty property="bdtldr_2"> bdtldr_2, </isNotEmpty>
		<isNotEmpty property="cpcty_rt_1"> cpcty_rt_1, </isNotEmpty>
		<isNotEmpty property="cpcty_rt_2"> cpcty_rt_2, </isNotEmpty>
		<isNotEmpty property="guk_buld"> guk_buld, </isNotEmpty>
		<isNotEmpty property="guk_buld_01"> guk_buld_01, </isNotEmpty>
		<isNotEmpty property="guk_buld_02"> guk_buld_02, </isNotEmpty>
		<isNotEmpty property="guk_buld_03"> guk_buld_03, </isNotEmpty>
		<isNotEmpty property="guk_buld_04"> guk_buld_04, </isNotEmpty>
		<isNotEmpty property="tmseq_buld"> tmseq_buld, </isNotEmpty>
		<isNotEmpty property="tmseq_buld_01"> tmseq_buld_01, </isNotEmpty>
		<isNotEmpty property="tmseq_buld_02"> tmseq_buld_02, </isNotEmpty>
		<isNotEmpty property="region_buld"> region_buld, </isNotEmpty>
		<isNotEmpty property="owned_region"> owned_region, </isNotEmpty>
		<isNotEmpty property="owned_region_01"> owned_region_01, </isNotEmpty>
		<isNotEmpty property="owned_region_02"> owned_region_02, </isNotEmpty>
		<isNotEmpty property="cynlst"> cynlst, </isNotEmpty>
		<isNotEmpty property="cynlst_01"> cynlst_01, </isNotEmpty>
		<isNotEmpty property="cynlst_02"> cynlst_02, </isNotEmpty>
		<isNotEmpty property="public_buld_a"> public_buld_a, </isNotEmpty>
		<isNotEmpty property="public_buld_b"> public_buld_b, </isNotEmpty>
		<isNotEmpty property="public_buld_c"> public_buld_c, </isNotEmpty>
		<isNotEmpty property="public_asbu"> public_asbu, </isNotEmpty>
		<isNotEmpty property="purchase"> purchase, </isNotEmpty>
		<isNotEmpty property="declining"> declining, </isNotEmpty>
		<isNotEmpty property="soldout"> soldout, </isNotEmpty>
		<isNotEmpty property="sector"> sector, </isNotEmpty>
		<isNotEmpty property="spkfc"> spkfc, </isNotEmpty>
		<isNotEmpty property="fill_gb"> fill_gb, </isNotEmpty>
		<isNotEmpty property="useu"> useu, </isNotEmpty>
		<isNotEmpty property="uses"> uses, </isNotEmpty>
		<isNotEmpty property="sector_nm"> sector_nm, </isNotEmpty>
		<isNotEmpty property="solar_1"> solar_1, </isNotEmpty>
		<isNotEmpty property="solar_2"> solar_2, </isNotEmpty>
		<isNotEmpty property="hbdtldr_1"> hbdtldr_1, </isNotEmpty>
		<isNotEmpty property="hbdtldr_2"> hbdtldr_2, </isNotEmpty>
		<isNotEmpty property="hcpcty_rt_1"> hcpcty_rt_1, </isNotEmpty>
		<isNotEmpty property="hcpcty_rt_2"> hcpcty_rt_2, </isNotEmpty>
		<isNotEmpty property="hg_limit"> hg_limit, </isNotEmpty>
		<isNotEmpty property="taruse"> taruse, </isNotEmpty>
		<isNotEmpty property="soldkind"> soldkind, </isNotEmpty>
		<isNotEmpty property="soldgb"> soldgb, </isNotEmpty>
		<isNotEmpty property="residual"> residual, </isNotEmpty>
		<isNotEmpty property="unsold"> unsold, </isNotEmpty>
		<isNotEmpty property="gb"> gb, </isNotEmpty>
		<isNotEmpty property="gbname"> gbname, </isNotEmpty>
		<isNotEmpty property="sig"> sig, </isNotEmpty>
		<isNotEmpty property="emd"> emd, </isNotEmpty>
		<isNotEmpty property="sel"> sel, </isNotEmpty>
		<isNotEmpty property="space_gb"> space_gb, </isNotEmpty>
		<isNotEmpty property="space_gb_cd02"> space_gb_cd02, </isNotEmpty>
		<isNotEmpty property="space_gb_cd03"> space_gb_cd03, </isNotEmpty>
		<isNotEmpty property="sub_p_decline_gb"> sub_p_decline_gb, </isNotEmpty>
		<isNotEmpty property="sub_p_decline_val"> sub_p_decline_val, </isNotEmpty>
		<isNotEmpty property="sub_p_decline"> sub_p_decline, </isNotEmpty>
		<isNotEmpty property="public_transport_val"> public_transport_val, </isNotEmpty>
		<isNotEmpty property="public_transport"> public_transport, </isNotEmpty>

		gid, user_id, bookmark_nm, use_at, regist_dt
		)VALUES(
		<isNotEmpty property="kind"> #kind#, </isNotEmpty>
		<isNotEmpty property="cnt_kind"> #cnt_kind#, </isNotEmpty>

		<isNotEmpty property="pnilp_1"> #pnilp_1#, </isNotEmpty>
		<isNotEmpty property="pnilp_2"> #pnilp_2#, </isNotEmpty>
		<isNotEmpty property="jimok">
			<iterate property="jimok" open="(" close=")" conjunction=",">#jimok[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="parea_1"> #parea_1#, </isNotEmpty>
		<isNotEmpty property="parea_2"> #parea_2#, </isNotEmpty>
		<isNotEmpty property="spfc">
			<iterate property="spfc" open="(" close=")" conjunction=",">#spfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="land_use">
			<iterate property="land_use" open="(" close=")"
				conjunction=",">#land_use[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="geo_hl">
			<iterate property="geo_hl" open="(" close=")" conjunction=",">#geo_hl[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="geo_form">
			<iterate property="geo_form" open="(" close=")"
				conjunction=",">#geo_form[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="road_side">
			<iterate property="road_side" open="(" close=")"
				conjunction=",">#road_side[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="prtown">
			<iterate property="prtown" open="(" close=")" conjunction=",">#prtown[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="spcfc">
			<iterate property="spcfc" open="(" close=")" conjunction=",">#spcfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="cnflc_1"> #cnflc_1#, </isNotEmpty>
		<isNotEmpty property="cnflc_2"> #cnflc_2#, </isNotEmpty>

		<isNotEmpty property="guk_land"> #guk_land#, </isNotEmpty>
		<isNotEmpty property="guk_land_01"> #guk_land_01#, </isNotEmpty>
		<isNotEmpty property="guk_land_02"> #guk_land_02#, </isNotEmpty>
		<isNotEmpty property="guk_land_03"> #guk_land_03#, </isNotEmpty>
		<isNotEmpty property="guk_land_04"> #guk_land_04#, </isNotEmpty>
		<isNotEmpty property="tmseq_land"> #tmseq_land#, </isNotEmpty>
		<isNotEmpty property="tmseq_land_01"> #tmseq_land_01#, </isNotEmpty>
		<isNotEmpty property="tmseq_land_02"> #tmseq_land_02#, </isNotEmpty>
		<isNotEmpty property="region_land"> #region_land#, </isNotEmpty>
		<isNotEmpty property="owned_city"> #owned_city#, </isNotEmpty>
		<isNotEmpty property="owned_city_01"> #owned_city_01#, </isNotEmpty>
		<isNotEmpty property="owned_city_02"> #owned_city_02#, </isNotEmpty>
		<isNotEmpty property="owned_guyu"> #owned_guyu#, </isNotEmpty>
		<isNotEmpty property="owned_guyu_01"> #owned_guyu_01#, </isNotEmpty>
		<isNotEmpty property="owned_guyu_02"> #owned_guyu_02#, </isNotEmpty>
		<isNotEmpty property="residual_land"> #residual_land#, </isNotEmpty>
		<isNotEmpty property="unsold_land"> #unsold_land#, </isNotEmpty>
		<isNotEmpty property="invest"> #invest#, </isNotEmpty>
		<isNotEmpty property="public_site"> #public_site#, </isNotEmpty>
		<isNotEmpty property="public_parking"> #public_parking#, </isNotEmpty>
		<isNotEmpty property="generations"> #generations#, </isNotEmpty>
		<isNotEmpty property="council_land"> #council_land#, </isNotEmpty>
		<isNotEmpty property="minuse"> #minuse#, </isNotEmpty>
		<isNotEmpty property="industry"> #industry#, </isNotEmpty>
		<isNotEmpty property="priority"> #priority#, </isNotEmpty>


		<isNotEmpty property="cp_date_1"> #cp_date_1#, </isNotEmpty>
		<isNotEmpty property="cp_date_2"> #cp_date_2#, </isNotEmpty>
		<isNotEmpty property="bildng_ar_1"> #bildng_ar_1#, </isNotEmpty>
		<isNotEmpty property="bildng_ar_2"> #bildng_ar_2#, </isNotEmpty>
		<isNotEmpty property="totar_1"> #totar_1#, </isNotEmpty>
		<isNotEmpty property="totar_2"> #totar_2#, </isNotEmpty>
		<isNotEmpty property="plot_ar_1"> #plot_ar_1#, </isNotEmpty>
		<isNotEmpty property="plot_ar_2"> #plot_ar_2#, </isNotEmpty>
		<isNotEmpty property="bdtldr_1"> #bdtldr_1#, </isNotEmpty>
		<isNotEmpty property="bdtldr_2"> #bdtldr_2#, </isNotEmpty>
		<isNotEmpty property="cpcty_rt_1"> #cpcty_rt_1#, </isNotEmpty>
		<isNotEmpty property="cpcty_rt_2"> #cpcty_rt_2#, </isNotEmpty>

		<isNotEmpty property="guk_buld"> #guk_buld#, </isNotEmpty>
		<isNotEmpty property="guk_buld_01"> #guk_buld_01#, </isNotEmpty>
		<isNotEmpty property="guk_buld_02"> #guk_buld_02#, </isNotEmpty>
		<isNotEmpty property="guk_buld_03"> #guk_buld_03#, </isNotEmpty>
		<isNotEmpty property="guk_buld_04"> #guk_buld_04#, </isNotEmpty>
		<isNotEmpty property="tmseq_buld"> #tmseq_buld#, </isNotEmpty>
		<isNotEmpty property="tmseq_buld_01"> #tmseq_buld_01#, </isNotEmpty>
		<isNotEmpty property="tmseq_buld_02"> #tmseq_buld_02#, </isNotEmpty>
		<isNotEmpty property="region_buld"> #region_buld#, </isNotEmpty>
		<isNotEmpty property="owned_region"> #owned_region#, </isNotEmpty>
		<isNotEmpty property="owned_region_01"> #owned_region_01#, </isNotEmpty>
		<isNotEmpty property="owned_region_02"> #owned_region_02#, </isNotEmpty>
		<isNotEmpty property="cynlst"> #cynlst#, </isNotEmpty>
		<isNotEmpty property="cynlst_01"> #cynlst_01#, </isNotEmpty>
		<isNotEmpty property="cynlst_02"> #cynlst_02#, </isNotEmpty>
		<isNotEmpty property="public_buld_a"> #public_buld_a#, </isNotEmpty>
		<isNotEmpty property="public_buld_b"> #public_buld_b#, </isNotEmpty>
		<isNotEmpty property="public_buld_c"> #public_buld_c#, </isNotEmpty>
		<isNotEmpty property="public_asbu"> #public_asbu#, </isNotEmpty>
		<isNotEmpty property="purchase"> #purchase#, </isNotEmpty>
		<isNotEmpty property="declining"> #declining#, </isNotEmpty>


		<isNotEmpty property="soldout">
			<iterate property="soldout" open="(" close=")"
				conjunction=",">#soldout[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="sector">
			<iterate property="sector" open="(" close=")" conjunction=",">#sector[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="spkfc">
			<iterate property="spkfc" open="(" close=")" conjunction=",">#spkfc[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="fill_gb">
			<iterate property="fill_gb" open="(" close=")"
				conjunction=",">#fill_gb[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="useu">
			<iterate property="useu" open="(" close=")" conjunction=",">#useu[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="uses">
			<iterate property="uses" open="(" close=")" conjunction=",">#uses[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="sector_nm"> #sector_nm#, </isNotEmpty>
		<isNotEmpty property="solar_1"> #solar_1#, </isNotEmpty>
		<isNotEmpty property="solar_2"> #solar_2#, </isNotEmpty>
		<isNotEmpty property="hbdtldr_1"> #hbdtldr_1#, </isNotEmpty>
		<isNotEmpty property="hbdtldr_2"> #hbdtldr_2#, </isNotEmpty>
		<isNotEmpty property="hcpcty_rt_1"> #hcpcty_rt_1#, </isNotEmpty>
		<isNotEmpty property="hcpcty_rt_2"> #hcpcty_rt_2#, </isNotEmpty>
		<isNotEmpty property="hg_limit"> #hg_limit#, </isNotEmpty>
		<isNotEmpty property="taruse"> #taruse#, </isNotEmpty>
		<isNotEmpty property="soldkind"> #soldkind#, </isNotEmpty>
		<isNotEmpty property="soldgb">
			<iterate property="soldgb" open="(" close=")" conjunction=",">#soldgb[]#
			</iterate>
			,
		</isNotEmpty>

		<isNotEmpty property="residual"> #residual#, </isNotEmpty>
		<isNotEmpty property="unsold"> #unsold#, </isNotEmpty>


		<isNotEmpty property="gb">
			<iterate property="gb" open="(" close=")" conjunction=",">#gb[]#
			</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="gbname"> #gbname#, </isNotEmpty>
		<isNotEmpty property="sig"> #sig#, </isNotEmpty>
		<isNotEmpty property="emd"> #emd#, </isNotEmpty>

		<isNotEmpty property="sel"> #sel#, </isNotEmpty>
		<isNotEmpty property="space_gb">
			<iterate property="space_gb" open="(" close=")"
				conjunction=",">#space_gb[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="space_gb_cd02">
			<iterate property="space_gb_cd02" open="(" close=")"
				conjunction=",">#space_gb_cd02[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="space_gb_cd03">
			<iterate property="space_gb_cd03" open="(" close=")"
				conjunction=",">#space_gb_cd03[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="sub_p_decline_gb"> #sub_p_decline_gb#, </isNotEmpty>
		<isNotEmpty property="sub_p_decline_val">
			<iterate property="sub_p_decline_val" open="(" close=")"
				conjunction=",">#sub_p_decline_val[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="sub_p_decline">
			<iterate property="sub_p_decline" open="(" close=")"
				conjunction=",">#sub_p_decline[]#</iterate>
			,
		</isNotEmpty>
		<isNotEmpty property="public_transport_val"> #public_transport_val#, </isNotEmpty>
		<isNotEmpty property="public_transport">
			<iterate property="public_transport" open="(" close=")"
				conjunction=",">#public_transport[]#</iterate>
			,
		</isNotEmpty>

		(#gid#)::integer, #user_id#, #bookmark_nm#, 'Y', now()
		)
	</insert>
	<!-- 즐겨찾기 삭제 -->
	<delete id="gisinfoDAO.gis_delete_bookmark"
		parameterClass="GisBasicVO">
		<!-- 완료(기존유지) -->
		/* 사용자별 즐겨찾기 삭제 */
   	 	<![CDATA[	 ]]>
		DELETE FROM public.tn_user_bookmark
		WHERE user_id = #user_id# AND gid = (#gid#)::integer
	</delete>


	<!-- click정보조회 - 토지 -->
	<select id="gisinfoDAO.search_coordnate_land_"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 완료(이전 기능으로 수정하지 않아도 됌) -->
		/* click정보조회 - 토지 */
		SELECT D.*,
		E.a6 AS state,
		E.a7 AS committee,
		E.a8 AS end_date,
		E.a9 AS hope_price,
		E.a10 AS appraised_value,
		E.z11 AS price
		FROM
		(
		SELECT
		A.a1, A.a3, A.a4, B.pnilp, B.parea,
		(SELECT name FROM sh_code Z WHERE type = 'JIMOK' AND B.jimok = Z.code) AS
		jimok,
		(SELECT name FROM sh_code Z WHERE type = 'SPFC' AND B.spfc1 = Z.code) AS
		spfc1,
		(SELECT name FROM sh_code Z WHERE type = 'LAND_USE' AND B.land_use = Z.code)
		AS land_use,
		(SELECT name FROM sh_code Z WHERE type = 'GEO_HL' AND B.geo_hl = Z.code) AS
		geo_hl,
		(SELECT name FROM sh_code Z WHERE type = 'GEO_FORM' AND B.geo_form = Z.code)
		AS geo_form,
		(SELECT name FROM sh_code Z WHERE type = 'ROAD_SIDE' AND B.road_side =
		Z.code) AS road_side,
		(SELECT name FROM sh_code Z WHERE type = 'PRTOWN' AND C.a10 = Z.code) AS
		prtown,
		ST_AsText(A.geom) AS geom
		FROM sn_ccmdi_11 A, sn_apmm_nv_land_11 B, sn_land_kind_11 C
		WHERE LEFT(A.a1, 8) =
		( SELECT emd_cd FROM tl_scco_emd
		WHERE st_contains(geom, st_setsrid(st_point(#coord_x#::double precision,
		#coord_y#::double precision)::geometry, 4326)) )
		AND
		st_contains(A.geom, st_setsrid(st_point(#coord_x#::double precision, #coord_y#::double
		precision)::geometry, 4326))
		AND A.a1 = B.pnu
		AND A.a1 = C.a1
		) D left outer join basic_34_1 E ON D.a1 = E.pnu
	</select>

	<!-- pnu를 통한 geom정보 조회-->
	<select id="gisinfoDAO.search_coordnate" parameterClass="GisBasicVO" resultClass="String">
		select ST_AsText(the_geom) AS geom  
		from landsys_gis.ctnu_lgstr_2024
		where innb = #pnu#
	</select>
	
	
	<!-- click정보조회 - 토지 20240807 LEK 수정 실제 사용-->
	<select id="gisinfoDAO.search_coordnate_land" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/* click정보조회 - 토지 */
		/*sh_code 테이블이 tc_brmp테이블로 코드 분류체계가 일원화 되었으므로 쿼리 수정*/
		select A.innb as pnu,
		concat(A.legaldong_nm,' ',A.lnm_lndcgr_smbol)  as adres,
		CASE WHEN B.pnilp <![CDATA[<>]]>
		0 THEN cast(cast( B.pnilp as money) as TEXT) ELSE '0' END AS pnilp,
		B.lad_ar as plot_ar, 
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'JIMOK' AND s.lndcgr_code = Z.mlsfc_code) AS jimok,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'SPFC' AND s.spfc_code_1 = Z.mlsfc_code) AS spfc1,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'LAND_USE' AND s.lad_use_sittn_code = Z.mlsfc_code) AS land_use,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'GEO_HL' AND s.tpgrph_hg_code = Z.mlsfc_code) AS geo_hl,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'GEO_FORM' AND s.tpgrph_frm_code = Z.mlsfc_code) AS geo_form,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'ROAD_SIDE' AND s.road_side_code = Z.mlsfc_code) AS road_side,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'PRTOWN' AND C.posesn_se_code = Z.mlsfc_code) AS prtown,
		ST_AsText(A.the_geom) AS geom
		FROM LANDSYS_GIS.CTNU_LGSTR_2024 A, landsys_gis.pnilp B,
		landsys_gis.lad_posesn_info C,
		landsys_gis.lad_chartr_info s
		WHERE LEFT(A.innb, 8) =
		( SELECT EMD_CODE as emd_cd
		FROM LANDSYS_GIS.EMD_ADMINIST_BNDRY
		WHERE st_contains(the_geom, st_setsrid(st_point(#coord_x#::double
		precision, #coord_y#::double precision)::geometry, 4326)) )
		AND ST_Intersects(A.the_geom, ST_SetSRID(ST_MakePoint(#coord_x#::double precision, #coord_y#::double precision), 4326))
		<!-- st_contains(A.the_geom, st_setsrid(st_point(#coord_x#::double precision, #coord_y#::double precision)::geometry, 4326))-->
		AND A.innb = B.pnu
		AND A.innb = C.pnu
		and A.innb = s.pnu
	</select>
	
	<!-- click정보조회 - 토지 20240926 LEK 수정 시 사용한 기존 쿼리 -->
	<select id="gisinfoDAO.search_coordnate_land_dmsrud" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/* click정보조회 - 토지 */
		/*sh_code 테이블이 tc_brmp테이블로 코드 분류체계가 일원화 되었으므로 쿼리 수정*/
		select A.pnu,
		A.adres,
		CASE WHEN B.pnilp <![CDATA[<>]]>
		0 THEN cast(cast( B.pnilp as money) as TEXT) ELSE '0' END AS pnilp,
		B.plot_ar,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'JIMOK' AND B.lndcgr_code = Z.mlsfc_code) AS jimok,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'SPFC' AND B.spfc_1 = Z.mlsfc_code) AS spfc1,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'LAND_USE' AND B.lad_use = Z.mlsfc_code) AS land_use,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'GEO_HL' AND B.tpgrph_hg = Z.mlsfc_code) AS geo_hl,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'GEO_FORM' AND B.tpgrph_frm = Z.mlsfc_code) AS geo_form,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'ROAD_SIDE' AND B.road_side = Z.mlsfc_code) AS road_side,
		(SELECT mlsfc FROM landsys_adm.tc_brmp Z WHERE lclas_code = 'PRTOWN' AND C.posesn_se_code = Z.mlsfc_code) AS prtown,
		ST_AsText(A.the_geom) AS geom
		FROM LANDSYS_GIS.CTNU_LGSTR_SU A, landsys_gis.pnilp B,
		landsys_gis.lad_frtl_info_su_golnd_publnd C
		WHERE LEFT(A.pnu, 8) =
		( SELECT EMD_CODE as emd_cd
		FROM LANDSYS_GIS.EMD_ADMINIST_BNDRY
		WHERE st_contains(the_geom, st_setsrid(st_point(#coord_x#::double
		precision, #coord_y#::double precision)::geometry, 4326)) )
		AND
		st_contains(A.the_geom, st_setsrid(st_point(#coord_x#::double precision, #coord_y#::double
		precision)::geometry, 4326))
		AND A.pnu = B.pnu
		AND A.pnu = C.pnu
	</select>

	<!-- click정보조회 - 기존 건물 (미사용) -->
	<select id="gisinfoDAO.search_coordnate_buld_"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 완료(미사용건이라 수정하지 않음) -->
		/* click정보조회 - 건물 */
		SELECT
		a4, a5, a9, a11, a12, a13, a14, a15, a16, a17, a18, a22,
		ST_AsText(the_geom) AS geom
		FROM sn_gis_bims_su
		WHERE LEFT(a2, 8) =
		( SELECT EMD_CODE as emd_cd FROM LANDSYS_GIS.EMD_ADMINIST_BNDRY
		WHERE st_contains(the_geom, st_setsrid(st_point(#coord_x#::double
		precision, #coord_y#::double precision)::geometry, 4326)) )
		AND
		st_contains(the_geom, st_setsrid(st_point(#coord_x#::double precision, #coord_y#::double
		precision)::geometry, 4326))
	</select>
	<!-- click정보조회 - 신규 건물 -->
	<select id="gisinfoDAO.search_coordnate_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 완료(완성 되어 있는 부분) -->
		<![CDATA[
		/* click정보조회 - 건물 */
		SELECT USE_CONFM_DE 	                               AS a13,
			   BILD_PRPOS_NM	                               AS a9,
			   BILD_STRCT_NM	                               AS a11,
			   CASE WHEN BILD_AR <> 0 THEN BILD_AR  ELSE 0 END AS a12,
			   CASE WHEN TOTAR   <> 0 THEN TOTAR    ELSE 0 END AS a14,
			   CASE WHEN HG      <> 0 THEN HG       ELSE 0 END AS a16,
			   CASE WHEN BDTLDR  <> 0 THEN BDTLDR   ELSE 0 END AS a17,
			   CASE WHEN measrmt_rt<> 0 THEN measrmt_rt ELSE 0 END AS a18,
			   ST_ASTEXT(the_geom)                             AS geom
 		  FROM LANDSYS_GIS.GIS_BULD_UNITY_INFO_SU
		 WHERE LEFT(PNU, 8) =	( SELECT EMD_CODE
								    FROM LANDSYS_GIS.EMD_ADMINIST_BNDRY
								   WHERE ST_CONTAINS(the_geom, ST_SETSRID(ST_POINT(#coord_x#::double precision, #coord_y#::double precision)::geometry, 4326))
								)
		   AND ST_CONTAINS(the_geom, ST_SETSRID(ST_POINT(#coord_x#::double precision, #coord_y#::double precision)::geometry, 4326))
		]]>
	</select>


	<!-- 데이터추출 - 기존 지적(미사용) -->
	<select id="gisinfoDAO.gis_data_attr_land_"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 완료(미사용건으로 수정하지 않음) -->
		SELECT A.a1 AS pnu,
		ST_AsText(A.geom) AS geom,
		B.parea,
		B.pnilp,
		B.jimok,
		B.spfc1 AS spfc,
		B.land_use,
		B.geo_hl,
		B.geo_form,
		B.road_side,
		C.a10 AS prtown
		FROM sn_ccmdi_11 A, sn_apmm_nv_land_11 B, sn_land_kind_11 C
		WHERE ST_INTERSECTS(ST_TRANSFORM(A.geom, 5179) ,
		ST_TRANSFORM(ST_SetSRID(ST_GEOMFROMTEXT(#pk#), 4326), 5179))
		AND ST_AREA(ST_INTERSECTION(A.geom, ST_SetSRID(ST_GEOMFROMTEXT(#pk#),
		4326))) >= ST_AREA(A.geom)/2
		AND A.a1 = B.pnu AND A.a1 = C.a1

	</select>
	<!-- 데이터추출 - 신규 지적 -->
	<select id="gisinfoDAO.gis_data_attr_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.PNU AS PNU,
		<!-- ST_ASTEXT(ST_FLIPCOORDINATES(A.THE_GEOM)) AS GEOM, -->
		ST_ASTEXT(A.THE_GEOM) AS GEOM,
		B.plot_ar,
		B.PNILP,
		B.lndcgr_code as jimok,
		B.spfc_1,
		B.lad_use,
		B.tpgrph_hg,
		B.tpgrph_frm,
		B.ROAD_SIDE,
		C.posesn_se_code AS PRTOWN
		FROM LANDSYS_GIS.CTNU_LGSTR_SU A, LANDSYS_GIS.PNILP B,
		LANDSYS_GIS.lad_frtl_info_su_golnd_publnd C
		WHERE ST_INTERSECTS(ST_TRANSFORM(A.THE_GEOM, 5179) ,
		ST_TRANSFORM(ST_SETSRID(ST_GEOMFROMTEXT(#pk#), 4326), 5179))
		AND ST_AREA(ST_INTERSECTION(A.THE_GEOM, ST_SETSRID(ST_GEOMFROMTEXT(#pk#),
		4326))) >= ST_AREA(A.THE_GEOM)/2
		AND A.PNU = B.PNU AND A.PNU = C.pnu
	</select>
	<!-- 데이터추출 - 신규 건물 -->
	<select id="gisinfoDAO.gis_data_attr_build"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.PNU AS PNU,
		<!-- ST_ASTEXT(ST_FLIPCOORDINATES(A.THE_GEOM)) AS GEOM, -->
		ST_ASTEXT(A.THE_GEOM) AS GEOM,
		A.BILD_STRCT_CODE,
		A.BILD_AR,
		A.TOTAR
		FROM LANDSYS_GIS.GIS_BULD_UNITY_INFO_SU A
		WHERE ST_INTERSECTS(ST_TRANSFORM(A.THE_GEOM, 5179) ,
		ST_TRANSFORM(ST_SETSRID(ST_GEOMFROMTEXT(#pk#), 4326), 5179))
		AND ST_AREA(ST_INTERSECTION(A.THE_GEOM, ST_SETSRID(ST_GEOMFROMTEXT(#pk#),
		4326))) >= ST_AREA(A.THE_GEOM)/2
	</select>




	<!-- 데이터추출 - 컬럼정보 -->
	<select id="gisinfoDAO.gis_data_comment"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		emd_code as as emd_cd,
		emd_korean_nm as emd_kor_nm,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y
		FROM landsys_gis.emd_administ_bndry
		WHERE 1=0
	</select>

	<!-- 토지검색 20240828 LEK 수정 신규사용 -->
	<select id="gisinfoDAO.gis_search_land_list" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
	/*========== 기본검색 ==========*/
		/*sh_code 테이블이 tc_brmp테이블로 코드 분류체계가 일원화 되었으므로 쿼리 수정*/
		SELECT
		A.pnu
		, addr1
		, '' as addr2,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS gb,
		ST_X(ST_Centroid(A.geom)) AS addr_x,
		ST_Y(ST_Centroid(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,3857))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'JIMOK' AND A.jimok = B.mlsfc_code) AS jimok,
		plot_ar, pnilp,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND A.spfc1 = B.mlsfc_code) AS spfc1,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'LAND_USE' AND A.lad_use = B.mlsfc_code) AS land_use,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_HL' AND A.tpgrph_hg = B.mlsfc_code) AS geo_hl,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_FORM' AND A.tpgrph_frm = B.mlsfc_code) AS geo_form,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'ROAD_SIDE' AND A.road_side = B.mlsfc_code) AS road_side,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS prtown
		FROM
		(
			select * from landsys_gis.v_gis_land_search
			where
				signgu_code = #sig# /*시군구*/ 
				<isNotEmpty prepend="AND" property="emd">	
						legaldong_code like #emd#||'%' /*읍면동*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="gb">
					gb IN
					<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#</iterate> /*토지소유*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="jimok">
					jimok IN
					<iterate property="jimok" open="(" close=")" conjunction=",">#jimok[]# </iterate> /*지목*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="parea_1">
		    			<![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="parea_2">
		    			<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="pnilp_1">
		    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="pnilp_2">
		    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="spfc">
					spfc1 IN
					<iterate property="spfc" open="(" close=")" conjunction=",">#spfc[]# </iterate>/*용도지역*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="land_use">
					lad_use IN
					<iterate property="land_use" open="(" close=")" conjunction=","> #land_use[]# </iterate>/*토지이용상황*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="geo_hl">
					tpgrph_hg IN
					<iterate property="geo_hl" open="(" close=")" conjunction=","> #geo_hl[]# </iterate> /*지형고저*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="geo_form">
					tpgrph_frm IN
					<iterate property="geo_form" open="(" close=")" conjunction=","> #geo_form[]# </iterate> /*지형형상*/
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="road_side">
					road_side IN
					<iterate property="road_side" open="(" close=")" conjunction=","> #road_side[]# </iterate> /*도로접면*/
				</isNotEmpty>
		)A
	</select>
	
	<!-- 토지검색 20240807 LEK 수정 예전사용 -->
	<select id="gisinfoDAO.gis_search_land_list_old" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 기본검색 ==========*/
		/*sh_code 테이블이 tc_brmp테이블로 코드 분류체계가 일원화 되었으므로 쿼리 수정*/
		SELECT
		A.pnu, addr1, '' as addr2,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS gb,
		ST_X(ST_Centroid(A.geom)) AS addr_x,
		ST_Y(ST_Centroid(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,3857))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'JIMOK' AND A.jimok = B.mlsfc_code) AS jimok,
		plot_ar, pnilp,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND A.spfc1 = B.mlsfc_code) AS spfc1,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'LAND_USE' AND A.lad_use = B.mlsfc_code) AS land_use,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_HL' AND A.tpgrph_hg = B.mlsfc_code) AS geo_hl,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_FORM' AND A.tpgrph_frm = B.mlsfc_code) AS geo_form,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'ROAD_SIDE' AND A.road_side = B.mlsfc_code) AS road_side,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS prtown
		FROM
		(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use, aa.tpgrph_hg,
			aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(
			select
				p.*,
				s.lad_ar as plot_ar,
				s.lndcgr_code as jimok,
				s.spfc_code_1 as spfc1,
				s.lad_use_sittn_code as lad_use, --토지이용상황 코드
				s.tpgrph_hg_code as tpgrph_hg, --지형높이 코드
				s.tpgrph_frm_code as tpgrph_frm, --지형형상 코드
				s.road_side_code as road_side  --도로측면 코드
			from
				(
				select
					pnu,
					pnilp
				from
					landsys_gis.PNILP
				where
					signgu_code = #sig# /*시군구*/
				<isNotEmpty prepend="AND" property="emd">	
						legaldong_code = #emd# || '00' /*읍면동*/
				</isNotEmpty>
			)as p
			inner join
				landsys_gis.lad_chartr_info as s   --토지특성정보 테이블 지목,토지면적,용도지역,토지이용상황,지형높이,지형형상,도로측면 존재
			on p.pnu = s.pnu
			<!-- SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty> -->
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE 1=1
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
    			<![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_2">
    			<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			lad_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			tpgrph_hg IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			tpgrph_frm IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="outher"> A.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			A.pnu, addr1, '' as addr2,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'JIMOK' AND A.jimok = B.mlsfc_code) AS jimok,
			plot_ar, pnilp,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND A.spfc1 = B.mlsfc_code) AS spfc1,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'LAND_USE' AND A.lad_use = B.mlsfc_code) AS land_use,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_HL' AND A.tpgrph_hg = B.mlsfc_code) AS geo_hl,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_FORM' AND A.tpgrph_frm = B.mlsfc_code) AS geo_form,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'ROAD_SIDE' AND A.road_side = B.mlsfc_code) AS road_side,
			(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'PRTOWN' AND A.gb = B.mlsfc_code) AS prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(
				SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
						tpgrph_hg, tpgrph_frm, road_side 
				FROM landsys_gis.PNILP
				WHERE signgu_code = #sig# /*시군구*/
				<isNotEmpty prepend="AND" property="emd"> 
					lad_locplc_code = RIGHT(#emd#, 3)||'00' /*읍면동*/ 
				</isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")" conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")" conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE 1=1
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          		<![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
         		 <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				lad_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				tpgrph_hg IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				tpgrph_frm IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="outher"> A.pnu = Z88.pnu
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_guk_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 국유지일반재산(캠코)토지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a12 AS gb,
		ST_X(ST_PointOnSurface(B.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(B.geom)) AS addr_y,
		ST_AsText(B.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(B.geom,900913))::json As geometry,
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use, aa.tpgrph_hg,
		aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a12 FROM
		landsys_gis.golnd_gnrl
		WHERE prprty_knd = '토지' AND
		manage_sttus IN
		<iterate property="guk_land_value" open="(" close=")"
			conjunction=","> #guk_land_value[]# </iterate>
		/*관리상태*/
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a12 AS gb,
			ST_X(ST_PointOnSurface(B.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(B.geom)) AS addr_y,
			ST_AsText(B.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(B.geom,900913))::json As geometry,
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use, aa.tpgrph_hg,
			aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a12 FROM
			landsys_gis.golnd_gnrl
			WHERE prprty_knd = '토지' AND
			manage_sttus IN
			<iterate property="guk_land_value" open="(" close=")"
				conjunction=","> #guk_land_value[]# </iterate>
			/*관리상태*/
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_tmseq_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 위탁관리 시유지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a2 FROM
		landsys_gis.cnsgn_manage_ctylnd
		WHERE manage_sttus IN
		<iterate property="tmseq_land_value" open="(" close=")"
			conjunction=","> #tmseq_land_value[]# </iterate>
		/*관리상태*/
		) B


		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
	<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a2 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a2 FROM
			landsys_gis.cnsgn_manage_ctylnd
			WHERE manage_sttus IN
			<iterate property="tmseq_land_value" open="(" close=")"
				conjunction=","> #tmseq_land_value[]# </iterate>
			/*관리상태*/
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1

				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_region_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구위임관리 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_se as a2 FROM
		landsys_gis.atdrc_mndt_manage_ctylnd_info WHERE prprty_se = '토지'
		/*재산구분*/
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a2 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_se as a2 FROM
			landsys_gis.atdrc_mndt_manage_ctylnd_info WHERE prprty_se = '토지'
			/*재산구분*/
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_owned_city"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구 보유관리토지(시유지) ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a4 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_knd as a4 FROM
		landsys_gis.atdrc_hold_manage_lad_ctylnd_info
		WHERE prprty = '토지' /*재산*/
		<isNotEmpty prepend="AND" property="owned_city_value">
			prprty_knd IN
			<iterate property="owned_city_value" open="(" close=")"
				conjunction=","> #owned_city_value[]# </iterate>
			/*재산종류*/
		</isNotEmpty>
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, addr2,
			B.a4 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_knd as a4 FROM
			landsys_gis.atdrc_hold_manage_lad_ctylnd_info
			WHERE prprty = '토지' /*재산*/
			<isNotEmpty prepend="AND" property="owned_city_value">
				prprty_knd IN
				<iterate property="owned_city_value" open="(" close=")"
					conjunction=","> #owned_city_value[]# </iterate>
				/*재산종류*/
			</isNotEmpty>
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom FROM landsys_gis.reside_envrn_manage_bsns WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_owned_guyu"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구 보유관리토지(구유지) ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a5 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.parea, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_prpos_code as a5 FROM
		landsys_gis.atdrc_hold_manage_lad_gulnd_info
		WHERE prprty_stle_se = '토지' AND prprty_prpos_code IN
		<iterate property="owned_guyu_value" open="(" close=")"
			conjunction=","> #owned_guyu_value[]# </iterate>
		/*재산용도코드*/
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a5 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_prpos_code as a5 FROM
			landsys_gis.atdrc_hold_manage_lad_gulnd_info
			WHERE prprty_stle_se = '토지' AND prprty_prpos_code IN
			<iterate property="owned_guyu_value" open="(" close=")"
				conjunction=","> #owned_guyu_value[]# </iterate>
			/*재산용도코드*/
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_residual_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== SH잔여지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		'토지' AS gb,
		ST_X(ST_PointOnSurface(B.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(B.geom)) AS addr_y,
		ST_AsText(B.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(B.geom,900913))::json As geometry,
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use, aa.tpgrph_hg,
		aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT pnu, lndcgr as a12,the_geom as geom FROM
		landsys_gis.v_tb_remndr_area) B
		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::characplot_ararying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a12 AS gb,
			ST_X(ST_PointOnSurface(B.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(B.geom)) AS addr_y,
			ST_AsText(B.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(B.geom,900913))::json As geometry,
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use, aa.tpgrph_hg,
			aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT pnu, lndcgr as a12,the_geom as geom FROM
			landsys_gis.v_tb_remndr_area) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_unsold_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== SH미매각지 ==========*/
		SELECT
		adres as addr1, '' as addr2,
		lclas_code AS gb,
		pnu as pnu,
		sn as sn,
		tt_geom as tt_geom,
		ST_X(ST_PointOnSurface(tt_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(tt_geom)) AS addr_y,
		ST_AsText(tt_geom) AS geom,
		ST_AsGeoJSON(ST_Transform(tt_geom,900913))::json As geometry,
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND jimok = B.code) AS
		jimok,
		parea, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND spfc1 = B.code) AS spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND land_use =
		B.code) AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND geo_hl = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND geo_form = B.code) AS
		geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND road_side = B.code)
		AS road_side

		FROM
		(select tt.adres as adres,tt.lclas_code as lclas_code,tt.pnu as pnu,tt.sn as
		sn,tt.geom as tt_geom,aa.jimok as jimok,
		aa.spfc1 as spfc1,aa.land_use as land_use,aa.geo_hl as geo_hl,aa.geo_form as
		geo_form,aa.road_side as road_side,aa.plot_ar as parea
		,aa.pnilp as pnilp
		from
		(select a.*,b.pnu,b.adres as adres,a.the_geom as geom from
		landsys_gis.v_tb_un_sale_area a, (select * from
		landsys_gis.ctnu_lgstr_su
		WHERE signgu_code like #sig#||'%' /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> signgu_code like
			'%'||right(#emd#,5)||'%'</isNotEmpty>
		) b
		where st_intersects(st_transform(a.the_geom, 5179) ,
		st_transform(b.the_geom, 5179))
		and ST_Area(ST_Intersection(a.the_geom, b.the_geom)) >=
		st_area(a.the_geom)/2) tt
		left join
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side,signgu_code,lad_locplc_code FROM
		landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		ON tt.pnu::text = aa.pnu::text
		left JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		) cc
		ON aa.pnu::text = cc.a1::text) ta
		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE 1=1
		<!-- A.geom = B.geom <isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) 
			= #sig# /*시군구*/ </isNotEmpty> <isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) 
			= #emd# /*읍면동*/ </isNotEmpty> -->
		<isNotEmpty property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ parea >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ parea <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z1.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z2.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z3.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z4.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z5.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(tt_geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(tt_geom, Z6.geom)) >= st_area(tt_geom)/2
		</isNotEmpty>


		<isNotEmpty prepend="AND" property="outher"> tt_geom = Z99.geom
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			adres as addr1, '' as addr2,
			lclas_code AS gb,
			pnu as pnu,
			sn as sn,
			tt_geom as tt_geom,
			ST_X(ST_PointOnSurface(tt_geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(tt_geom)) AS addr_y,
			ST_AsText(tt_geom) AS geom,
			ST_AsGeoJSON(ST_Transform(tt_geom,900913))::json As geometry,
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND jimok = B.code) AS
			jimok,
			parea, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND land_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND geo_hl = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND geo_form = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND road_side = B.code)
			AS road_side

			FROM
			(select tt.adres as adres,tt.lclas_code as lclas_code,tt.pnu as
			pnu,tt.sn as sn,tt.geom as tt_geom,aa.jimok as jimok,
			aa.spfc1 as spfc1,aa.land_use as land_use,aa.geo_hl as geo_hl,aa.geo_form as
			geo_form,aa.road_side as road_side,aa.plot_ar as parea
			,aa.pnilp as pnilp
			from
			(select a.*,b.pnu,b.adres as adres,a.the_geom as geom from
			landsys_gis.v_tb_un_sale_area a, (select * from
			landsys_gis.ctnu_lgstr_su
			WHERE signgu_code like '%'||#sig#||'%' /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> signgu_code like
				'%'||right(#emd#,5)||'%'</isNotEmpty>
			) b
			where st_intersects(st_transform(a.the_geom, 5179) ,
			st_transform(b.the_geom, 5179))
			and
			ST_Area(ST_Intersection(a.the_geom, b.the_geom)) >=
			st_area(a.the_geom)/2) tt
			left join
			(SELECT pnu, plot_ar, pnilp,
			lndcgr_code as jimok, spfc_1 as spfc1, lad_use, tpgrph_hg, tpgrph_frm,
			road_side,signgu_code,lad_locplc_code FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			ON tt.pnu::text = aa.pnu::text
			left JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			) cc
			ON aa.pnu::text = cc.a1::text) ta

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE 1=1
			<isNotEmpty property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ parea >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ parea <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z1.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z2.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z3.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z4.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z5.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(tt_geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(tt_geom, Z6.geom)) >=
				st_area(tt_geom)/2
			</isNotEmpty>


			<isNotEmpty prepend="AND" property="outher"> tt_geom = Z88.geom
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY gb,addr1
	</select>

	<select id="gisinfoDAO.gis_search_land_list_invest"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 기능 제거 -->
		/*========== SH현물출자 ==========*/
		SELECT * FROM sh_code WHERE 1=0
	</select>

	<select id="gisinfoDAO.gis_search_land_list_public_site"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공기관 이전부지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a13 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT gid, pnu, geom, a13 FROM data_public_site
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a13 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT gid, pnu, geom, a13 FROM data_public_site
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_public_parking"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공영주차장 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.gb AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,
		(SELECT gid, pnu, geom, gb FROM data_public_parking
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.gb AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,
			(SELECT gid, pnu, geom, gb FROM data_public_parking
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				<!-- 완료 -->
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_generations"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 역세권사업 후보지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a24 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, bsns_se as a24 FROM
		landsys_gis.statn_cfr_bsns_cndcy_area_info
		<isNotEmpty prepend="WHERE" property="generations_value">
			bsns_se IN
			<iterate property="generations_value" open="(" close=")"
				conjunction=","> #generations_value[]# </iterate>
			/*사업구*/
		</isNotEmpty>
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a24 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, bsns_se as a24 FROM
			landsys_gis.statn_cfr_bsns_cndcy_area_info
			<isNotEmpty prepend="WHERE" property="generations_value">
				bsns_se IN
				<iterate property="generations_value" open="(" close=")"
					conjunction=","> #generations_value[]# </iterate>
				/*사업구*/
			</isNotEmpty>
			) B



			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
         	 <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
         	 <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_council_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 임대주택 단지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.a3 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid,pnu as pnu, the_geom as geom, se as a3 FROM
		landsys_gis.rthous_hsmp_hist_info
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.a3 AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid,pnu as pnu, the_geom as geom, se as a3 FROM
			landsys_gis.rthous_hsmp_hist_info
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          		<![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
         	 	<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_minuse"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 저이용공공시설 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.own AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, lad_posesn_se as own FROM
		landsys_gis.low_use_pblfclt_info
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.own AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, lad_posesn_se as own FROM
			landsys_gis.low_use_pblfclt_info
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				<!-- 완료 -->
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
         	 	 <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
          		<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>


	<select id="gisinfoDAO.gis_search_land_list_industry"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공부지 혼재지역 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.own AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, posesn_se as own FROM
		landsys_gis.public_plot_cnf_area_info
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.own AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, posesn_se as own FROM
			landsys_gis.public_plot_cnf_area_info
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
         		 <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
          		<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
      		 </isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>

	<select id="gisinfoDAO.gis_search_land_list_priority"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 중점활용 시유지 ==========*/
		SELECT
		B.pnu, addr1, '' as addr2,
		B.own AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
		jimok,
		plot_ar, pnilp,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
		prtown
		FROM
		(SELECT
		aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
		cc.a10 AS gb,
		zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
		tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
		WHERE signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		JOIN
		(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
		<isNotEmpty property="gb">
			WHERE posesn_se_code IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*토지소유*/
		</isNotEmpty>
		) cc
		ON aa.pnu::text = cc.a1::text
		LEFT JOIN landsys_gis.ctnu_lgstr_su zz ON aa.pnu::text = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		GROUP BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
		aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
		zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, posesn_se as own FROM
		landsys_gis.emphs_prcuse_ctylnd_info
		) B


		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT ZA.pnu, ZA.use_confm FROM
			(SELECT
			pnu,
			CASE
			WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
			'YYYYMMDD'::text)
			WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
			'YYYYMM'::text)
			WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
			'YYYY'::text)
			ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
			END AS use_confm
			FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
			</isNotEmpty>
			) ZA WHERE 1=1
			<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
			</isNotEmpty>
			) Z99
		</isNotEmpty>

		WHERE A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="jimok">
			jimok IN
			<iterate property="jimok" open="(" close=")" conjunction=",">
				#jimok[]# </iterate>
			/*지목*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="parea_1">
          <![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="parea_2">
          <![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spfc">
			spfc1 IN
			<iterate property="spfc" open="(" close=")" conjunction=",">
				#spfc[]# </iterate>
			/*용도지역*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="land_use">
			land_use IN
			<iterate property="land_use" open="(" close=")"
				conjunction=","> #land_use[]# </iterate>
			/*토지이용상황*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_hl">
			geo_hl IN
			<iterate property="geo_hl" open="(" close=")" conjunction=",">
				#geo_hl[]# </iterate>
			/*지형고저*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="geo_form">
			geo_form IN
			<iterate property="geo_form" open="(" close=")"
				conjunction=","> #geo_form[]# </iterate>
			/*지형형상*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="road_side">
			road_side IN
			<iterate property="road_side" open="(" close=")"
				conjunction=","> #road_side[]# </iterate>
			/*도로접면*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="spcfc">
			spcfc IN
			<iterate property="spcfc" open="(" close=")" conjunction=",">
				#spcfc[]# </iterate>
			/*용도지구*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher"> B.pnu = Z99.pnu
		</isNotEmpty>

		<isNotEmpty prepend="UNION" property="outher">
			SELECT
			B.pnu, addr1, '' as addr2,
			B.own AS gb,
			ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
			ST_AsText(A.geom) AS geom,
			ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
			(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.jimok = B.code) AS
			jimok,
			plot_ar, pnilp,
			(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc1 = B.code) AS
			spfc1,
			(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
			AS land_use,
			(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
			geo_hl,
			(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
			AS geo_form,
			(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
			B.code) AS road_side,
			(SELECT name FROM sh_code B WHERE type = 'PRTOWN' AND A.gb = B.code) AS
			prtown
			FROM
			(SELECT
			aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok as jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side,
			cc.a10 AS gb,
			zz.adres AS addr1, '' AS addr2, zz.the_geom as geom
			FROM
			(SELECT pnu, plot_ar, pnilp, lndcgr_code as jimok, spfc_1 as spfc1, lad_use,
			tpgrph_hg, tpgrph_frm, road_side FROM landsys_gis.PNILP
			WHERE signgu_code = #sig# /*시군구*/
			<isNotEmpty prepend="AND" property="emd"> lad_locplc_code =
				RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
			) aa
			JOIN
			(SELECT pnu as a1, posesn_se_code as a10 FROM landsys_gis.lad_frtl_info_su_golnd_publnd
			<isNotEmpty property="gb">
				WHERE posesn_se_code IN
				<iterate property="gb" open="(" close=")" conjunction=",">
					#gb[]# </iterate>
				/*토지소유*/
			</isNotEmpty>
			) cc
			ON aa.pnu::text = cc.a1::text
			LEFT JOIN landsys_gis.ctnu_lgstr_su
			zz ON aa.pnu::text = zz.pnu::text
			WHERE zz.the_geom IS NOT NULL
			GROUP
			BY aa.pnu, aa.plot_ar, aa.pnilp, aa.jimok, aa.spfc1, aa.lad_use,
			aa.tpgrph_hg, aa.tpgrph_frm, aa.road_side, cc.a10, zz.adres, zz.lnm_2,
			zz.the_geom ) A,

			(SELECT ogc_fid as gid, pnu, the_geom as geom, posesn_se as own FROM
			landsys_gis.emphs_prcuse_ctylnd_info
			) B

			<isNotEmpty prepend="," property="city_activation_val">
				( SELECT geom FROM data_city_activation WHERE
				business_type IN
				<iterate property="city_activation_val" open="(" close=")"
					conjunction=","> #city_activation_val[]# </iterate>
				<isNotEmpty prepend="AND" property="city_activation">
					gid IN
					<iterate property="city_activation" open="(" close=")"
						conjunction=","> #city_activation[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
					sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
				) Z1
			</isNotEmpty>
			<isNotEmpty prepend="," property="house_envment_val">
				( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
				WHERE
				prtn_step IN
				<iterate property="house_envment_val" open="(" close=")"
					conjunction=","> #house_envment_val[]# </iterate>
				<isNotEmpty prepend="AND" property="house_envment">
					ogc_fid IN
					<iterate property="house_envment" open="(" close=")"
						conjunction=","> #house_envment[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z2
			</isNotEmpty>
			<isNotEmpty prepend="," property="hope_land_val">
				( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
				hope_plot_bsns_knd IN
				<iterate property="hope_land_val" open="(" close=")"
					conjunction=","> #hope_land_val[]# </iterate>
				<isNotEmpty prepend="AND" property="hope_land">
					ogc_fid IN
					<iterate property="hope_land" open="(" close=")"
						conjunction=","> #hope_land[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z3
			</isNotEmpty>
			<isNotEmpty prepend="," property="release_area_val">
				( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
				relis_zone_ty IN
				<iterate property="release_area_val" open="(" close=")"
					conjunction=","> #release_area_val[]# </iterate>
				<isNotEmpty prepend="AND" property="release_area">
					ogc_fid IN
					<iterate property="release_area" open="(" close=")"
						conjunction=","> #release_area[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z4
			</isNotEmpty>
			<isNotEmpty prepend="," property="sub_p_decline_val">
				( SELECT the_geom as geom FROM
				landsys_gis.cty_reviv_spanuat_area_adstrd WHERE
				<isEqual property="sub_p_decline_gb" compareValue="01">
					nghbrhd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="02">
					ecnmy IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isEqual property="sub_p_decline_gb" compareValue="03">
					cmpnd IN
					<iterate property="sub_p_decline_val" open="(" close=")"
						conjunction=","> #sub_p_decline_val[]# </iterate>
				</isEqual>
				<isNotEmpty prepend="AND" property="sub_p_decline">
					ogc_fid IN
					<iterate property="sub_p_decline" open="(" close=")"
						conjunction=","> #sub_p_decline[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
					#sig#</isNotEmpty>
				) Z5
			</isNotEmpty>
			<isNotEmpty prepend="," property="public_transport_val">
				( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
				WHERE
				subway_reprsnt_route = #public_transport_val#
				<isNotEmpty prepend="AND" property="public_transport">
					ogc_fid IN
					<iterate property="public_transport" open="(" close=")"
						conjunction=","> #public_transport[]#::integer </iterate>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
					signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
					B.signgu_code = #sig#)</isNotEmpty>
				) Z6
			</isNotEmpty>

			<isNotEmpty prepend="," property="outher">
				( SELECT ZB.pnu, ZB.use_confm FROM
				(SELECT
				pnu,
				CASE
				WHEN length(use_confm_de::text) = 8 THEN to_date(use_confm_de::text,
				'YYYYMMDD'::text)
				WHEN length(use_confm_de::text) = 6 THEN to_date(use_confm_de::text,
				'YYYYMM'::text)
				WHEN length(use_confm_de::text) = 4 THEN to_date(use_confm_de::text,
				'YYYY'::text)
				ELSE to_date('19000101'::text, 'YYYYMMDD'::text)
				END AS use_confm
				FROM landsys_gis.BILD_REGSTR_TOTLDR WHERE 1=1
				<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
					/*시군구*/ </isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_1">
		    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="bdtldr_2">
		    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_1">
		    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cpcty_rt_2">
		    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
				</isNotEmpty>
				) ZB WHERE 1=1
				<isNotEmpty prepend="AND" property="cp_date_1">
	    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cp_date_2">
	    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
				</isNotEmpty>
				) Z88
			</isNotEmpty>

			WHERE A.pnu = B.pnu
			<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
				/*읍면동*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="jimok">
				jimok IN
				<iterate property="jimok" open="(" close=")" conjunction=",">
					#jimok[]# </iterate>
				/*지목*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="parea_1">
          		<![CDATA[ plot_ar >= (#parea_1#)::character varying /*면적*/ ]]>
       		</isNotEmpty>
        	<isNotEmpty prepend="AND" property="parea_2">
          		<![CDATA[ plot_ar <= (#parea_2#)::character varying /*면적*/ ]]>
        	</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_1">
    			<![CDATA[ pnilp >= (#pnilp_1#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="pnilp_2">
    			<![CDATA[ pnilp <= (#pnilp_2#)::integer /*공시지가*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="land_use">
				land_use IN
				<iterate property="land_use" open="(" close=")"
					conjunction=","> #land_use[]# </iterate>
				/*토지이용상황*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_hl">
				geo_hl IN
				<iterate property="geo_hl" open="(" close=")"
					conjunction=","> #geo_hl[]# </iterate>
				/*지형고저*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="geo_form">
				geo_form IN
				<iterate property="geo_form" open="(" close=")"
					conjunction=","> #geo_form[]# </iterate>
				/*지형형상*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spcfc">
				spcfc IN
				<iterate property="spcfc" open="(" close=")" conjunction=",">
					#spcfc[]# </iterate>
				/*용도지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_1">
    			<![CDATA[ cnflc >= (#cnflc_1#)::integer /*저촉율*/ ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnflc_2">
    			<![CDATA[ cnflc <= (#cnflc_2#)::integer /*저촉율*/ ]]>
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="city_activation_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z1.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="house_envment_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z2.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hope_land_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z3.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="release_area_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z4.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sub_p_decline_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z5.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="public_transport_val">
				st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
				5179)) AND
				ST_Area(ST_Intersection(B.geom, Z6.geom)) >=
				st_area(B.geom)/2
			</isNotEmpty>

			<isNotEmpty prepend="AND" property="outher"> B.pnu = Z88.pnu
			</isNotEmpty>

		</isNotEmpty>
		ORDER BY gb, pnu
	</select>







	<!-- 자산검색 - 건물 -->
	<select id="gisinfoDAO.gis_search_buld_list"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 기본검색 ==========*/
		SELECT
		A.pnu, addr1, addr2,
		(SELECT name FROM sh_code B WHERE type = 'PRPOS' AND A.prpos = B.code) AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		main_prpos_code IN
		<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
		</iterate>
		/*용도*/
		<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		main_prpos_code IN
		<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
		</iterate>
		/*용도*/
		<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE 1=1
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="gbname"> etc_prpos LIKE
			'%'||#gbname#||'%' /*용도-상세*/ </isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z1.geom)) >= st_area(A.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z2.geom)) >= st_area(A.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z3.geom)) >= st_area(A.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z4.geom)) >= st_area(A.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z5.geom)) >= st_area(A.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(A.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(A.geom, Z6.geom)) >= st_area(A.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			A.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( A.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY gb, A.pnu
	</select>


	<select id="gisinfoDAO.gis_search_buld_list_guk_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 국유지일반재산(캠코)건물 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a12 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a12 FROM
		landsys_gis.golnd_gnrl
		WHERE prprty_knd = '건물' AND
		manage_sttus IN
		<iterate property="guk_buld_value" open="(" close=")"
			conjunction=","> #guk_buld_value[]# </iterate>
		/*관리상태*/
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			<!-- 완료 -->
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_tmseq_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 위탁관리 건물 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, manage_sttus as a2 FROM
		landsys_gis.cnsgn_manage_ctylnd
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_region_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구위임관리 건물 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_se as a2 FROM
		landsys_gis.atdrc_mndt_manage_ctylnd_info WHERE prprty_se = '건물'
		/*재산구분*/
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_owned_region"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구 보유관리건물(자치구 = 서울시?) ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a4 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,

		(SELECT ogc_fid as gid, pnu, the_geom as geom, prprty_knd as a4 FROM
		landsys_gis.atdrc_hold_manage_lad_ctylnd_info
		WHERE prprty = '건물' /*재산*/
		<isNotEmpty prepend="AND" property="owned_city_value">
			prprty_knd IN
			<iterate property="owned_city_value" open="(" close=")"
				conjunction=","> #owned_city_value[]# </iterate>
			/*재산종류*/
		</isNotEmpty>
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			<!-- 완료 -->
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			<!-- 완료 -->
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_owned_seoul"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 자치구 보유관리건물(서울시) ==========*/
		SELECT * FROM sh_code WHERE 1=0
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_cynlst"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 재난위험시설 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a23 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,

		(SELECT gid, pnu, geom, a23 FROM data_cynlst
		WHERE 1=1
		<isNotEmpty prepend="AND" property="cynlst_value">
			a23 IN
			<iterate property="cynlst_value" open="(" close=")"
				conjunction=","> #cynlst_value[]# </iterate>
			/*안전등급*/
		</isNotEmpty>
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_public_buld_a"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공건축물(국공립) ==========*/
		SELECT * FROM sh_code WHERE 1=0
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_public_buld_b"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공건축물(서울시) ==========*/
		SELECT * FROM sh_code WHERE 1=0
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_public_buld_c"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공건축물(자치구) ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,
		<!-- 테이블 매칭 확인 해야함 -->
		(SELECT gid, pnu, geom, a2 FROM data_public_buld_c
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_public_asbu"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 공공기관이전건물 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a2 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,
		<!-- 테이블 매칭 확인 해야함 -->
		(SELECT ogc_fid as gid, pnu, the_geom as geom, before_sttus as a2 FROM
		landsys_gis.pblinstt_transr_buld
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_purchase"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 매입임대 ==========*/
		<!-- 매칭이 안됌 -->
		SELECT
		B.pnu, addr1, addr2,
		B.a10 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,
		<!-- 테이블 매칭 확인 -->
		(SELECT ogc_fid as gid, pnu as pnu, the_geom as geom, rent_house_se a10
		FROM landsys_gis.puchas_rthous_hist_info
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99
			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>

	<select id="gisinfoDAO.gis_search_buld_list_declining"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 노후매입임대 ==========*/
		SELECT
		B.pnu, addr1, addr2,
		B.a10 AS gb,
		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry, -- ycb 검색결과 전체표출 추가 20180626
		buld_nm, bildng_ar, totar, plot_ar, bdtldr, measrmt_rt, use_confm::character
		varying
		FROM
		(SELECT aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar, aa.totar,
		aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres AS addr1,
		zz.lnm AS addr2, zz.the_geom as geom
		FROM
		(SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		UNION
		SELECT pnu, buld_nm, main_prpos_code AS prpos, etc_prpos, bildng_ar, totar,
		plot_ar, bdtldr,
		measrmt_rt,COALESCE(landsys_gis.BILD_REGSTR_TITLELEDGER.use_confm_de::text,'')
		AS use_confm
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE
		<!-- main_prpos_code IN <iterate property="gb" open="(" close=")" conjunction=","> 
			#gb[]# </iterate> /*용도*/ -->
		signgu_code = #sig# /*시군구*/
		<isNotEmpty prepend="AND" property="emd"> legaldong_code =
			RIGHT(#emd#, 3)||'00' /*읍면동*/ </isNotEmpty>
		) aa
		LEFT JOIN landsys_gis.gis_buld_unity_info_su zz ON aa.pnu = zz.pnu::text
		WHERE zz.the_geom IS NOT NULL
		<!-- 컬럼이 삭제됌 a4,a5 -->
		GROUP BY aa.pnu, aa.buld_nm, aa.prpos, aa.etc_prpos, aa.bildng_ar,
		aa.totar, aa.plot_ar, aa.bdtldr, aa.measrmt_rt, aa.use_confm, zz.adres,
		zz.lnm, zz.the_geom ) A,
		(SELECT ogc_fid as gid, pnu, the_geom as geom, priort as a10 FROM
		landsys_gis.spanuat_pcsrnhs
		) B

		<isNotEmpty prepend="," property="city_activation_val">
			( SELECT geom FROM data_city_activation WHERE
			business_type IN
			<iterate property="city_activation_val" open="(" close=")"
				conjunction=","> #city_activation_val[]# </iterate>
			<isNotEmpty prepend="AND" property="city_activation">
				gid IN
				<iterate property="city_activation" open="(" close=")"
					conjunction=","> #city_activation[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> jache_gu = (SELECT
				sig_kor_nm FROM tl_scco_sig B WHERE B.sig_cd = #sig#)</isNotEmpty>
			) Z1
		</isNotEmpty>
		<isNotEmpty prepend="," property="house_envment_val">
			( SELECT the_geom as geom FROM landsys_gis.reside_envrn_manage_bsns
			WHERE
			prtn_step IN
			<iterate property="house_envment_val" open="(" close=")"
				conjunction=","> #house_envment_val[]# </iterate>
			<isNotEmpty prepend="AND" property="house_envment">
				ogc_fid IN
				<iterate property="house_envment" open="(" close=")"
					conjunction=","> #house_envment[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z2
		</isNotEmpty>
		<isNotEmpty prepend="," property="hope_land_val">
			( SELECT the_geom as geom FROM landsys_gis.hope_area_bsns WHERE
			hope_plot_bsns_knd IN
			<iterate property="hope_land_val" open="(" close=")"
				conjunction=","> #hope_land_val[]# </iterate>
			<isNotEmpty prepend="AND" property="hope_land">
				ogc_fid IN
				<iterate property="hope_land" open="(" close=")"
					conjunction=","> #hope_land[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z3
		</isNotEmpty>
		<isNotEmpty prepend="," property="release_area_val">
			( SELECT the_geom as geom FROM landsys_gis.relis_area WHERE
			relis_zone_ty IN
			<iterate property="release_area_val" open="(" close=")"
				conjunction=","> #release_area_val[]# </iterate>
			<isNotEmpty prepend="AND" property="release_area">
				ogc_fid IN
				<iterate property="release_area" open="(" close=")"
					conjunction=","> #release_area[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z4
		</isNotEmpty>
		<isNotEmpty prepend="," property="sub_p_decline_val">
			( SELECT the_geom as geom FROM landsys_gis.cty_reviv_spanuat_area_adstrd
			WHERE
			<isEqual property="sub_p_decline_gb" compareValue="01">
				nghbrhd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="02">
				ecnmy IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isEqual property="sub_p_decline_gb" compareValue="03">
				cmpnd IN
				<iterate property="sub_p_decline_val" open="(" close=")"
					conjunction=","> #sub_p_decline_val[]# </iterate>
			</isEqual>
			<isNotEmpty prepend="AND" property="sub_p_decline">
				ogc_fid IN
				<iterate property="sub_p_decline" open="(" close=")"
					conjunction=","> #sub_p_decline[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> LEFT(adstrd_code,5) =
				#sig#</isNotEmpty>
			) Z5
		</isNotEmpty>
		<isNotEmpty prepend="," property="public_transport_val">
			( SELECT the_geom as geom FROM landsys_gis.pbtrnsp_statn_cfr_legacy
			WHERE
			subway_reprsnt_route = #public_transport_val#
			<isNotEmpty prepend="AND" property="public_transport">
				ogc_fid IN
				<iterate property="public_transport" open="(" close=")"
					conjunction=","> #public_transport[]#::integer </iterate>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sig"> atdrc = (SELECT
				signgu_korean_nm FROM landsys_gis.signgu_administ_bndry B WHERE
				B.signgu_code = #sig#)</isNotEmpty>
			) Z6
		</isNotEmpty>

		<isNotEmpty prepend="," property="outher">
			( SELECT pnu FROM landsys_gis.PNILP WHERE 1=1
			<isNotEmpty prepend="AND" property="sig"> signgu_code = #sig#
				/*시군구*/ </isNotEmpty>
			<isNotEmpty prepend="AND" property="spfc">
				spfc1 IN
				<iterate property="spfc" open="(" close=")" conjunction=",">
					#spfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="road_side">
				road_side IN
				<iterate property="road_side" open="(" close=")"
					conjunction=","> #road_side[]# </iterate>
				/*도로접면*/
			</isNotEmpty>
			) Z99

			<!-- <isNotEmpty prepend="," property="buffer"> -->
			<!-- ( SELECT geom FROM tl_sprd_manage WHERE -->
			<!-- sig_cd = #sig# /*시군구*/ AND road_lt >= 4 /*도로길이 4m 이상*/ AND road_bt 
				>= #buffer#::integer /*도로폭 Xm 이상*/ ) Z88 -->
			<!-- </isNotEmpty> -->
		</isNotEmpty>

		WHERE
		A.pnu = B.pnu
		<isNotEmpty prepend="AND" property="sig"> LEFT(B.pnu,5) = #sig#
			/*시군구*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="emd"> LEFT(B.pnu,8) = #emd#
			/*읍면동*/ </isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_1">
    			<![CDATA[ use_confm >= to_date(#cp_date_1#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cp_date_2">
    			<![CDATA[ use_confm <= to_date(#cp_date_2#, 'YYYY/MM/DD') /*사용승인일 - 노후n년*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_1">
    			<![CDATA[ bildng_ar >= (#bildng_ar_1#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bildng_ar_2">
    			<![CDATA[ bildng_ar <= (#bildng_ar_2#)::double precision /*건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_1">
    			<![CDATA[ totar >= (#totar_1#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="totar_2">
    			<![CDATA[ totar <= (#totar_2#)::double precision /*연면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_1">
    			<![CDATA[ plot_ar >= (#plot_ar_1#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="plot_ar_2">
    			<![CDATA[ plot_ar <= (#plot_ar_2#)::double precision /*대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_1">
    			<![CDATA[ bdtldr >= (#bdtldr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="bdtldr_2">
    			<![CDATA[ bdtldr <= (#bdtldr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_1">
    			<![CDATA[ measrmt_rt >= (#cpcty_rt_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpcty_rt_2">
    			<![CDATA[ measrmt_rt <= (#cpcty_rt_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="city_activation_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z1.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z1.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="house_envment_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z2.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z2.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hope_land_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z3.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z3.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="release_area_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z4.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z4.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sub_p_decline_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z5.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z5.geom)) >= st_area(B.geom)/2
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="public_transport_val">
			st_intersects(st_transform(B.geom, 5179) , st_transform(Z6.geom,
			5179)) AND
			ST_Area(ST_Intersection(B.geom, Z6.geom)) >= st_area(B.geom)/2
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="outher">
			B.pnu = Z99.pnu
			<isNotEmpty prepend="AND" property="buffer">
				st_intersects( st_buffer( st_transform( B.geom, 5179 ), #buffer#::integer
				)::geometry, st_transform( Z88.geom, 5179 ) )
			</isNotEmpty>
		</isNotEmpty>

		ORDER BY gb, B.pnu
	</select>






	<!-- 자산검색 - 사업지구 -->
	<select id="gisinfoDAO.gis_search_dist_list"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*========== 사업구분 정보 - 사업지구 ==========*/
		<isNotEmpty property="kind">
			SELECT
			sn as gid,
			sle_se as a2,dstrc as a3,spfc as a4,hsmp_se as a5,prpos as a6,detail_prpos
			as a7,lndpcl_no as a8,ntfc_ar as a11,bdtldr as a13,
			measrmt_rt as a12,hg_lmtt as a14,appn_prpos as a15,sle_mth as a19,sle_at as
			a20,
			null AS addr_x,
			null AS addr_y,
			null AS geom
			FROM landsys_gis.bsns_dstrc_mg_dstrc   <!-- fg_merge_temp -->
			WHERE 1=1
			<isNotEmpty prepend="AND" property="soldout">
				sle_se IN
				<iterate property="soldout" open="(" close=")"
					conjunction=","> #soldout[]# </iterate>
				/*판매구분*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sector">
				dstrc IN
				<iterate property="sector" open="(" close=")"
					conjunction=","> #sector[]# </iterate>
				/*지구*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="spkfc">
				spfc IN
				<iterate property="spkfc" open="(" close=")" conjunction=",">
					#spkfc[]# </iterate>
				/*용도지역*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fill_gb">
				hsmp_se IN
				<iterate property="fill_gb" open="(" close=")"
					conjunction=","> #fill_gb[]# </iterate>
				/*단지구분*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="useu">
				prpos IN
				<iterate property="useu" open="(" close=")" conjunction=",">
					#useu[]# </iterate>
				/*용도*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uses">
				detail_prpos IN
				<iterate property="uses" open="(" close=")" conjunction=",">
					#uses[]# </iterate>
				/*세부용도*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sector_nm">
				lndpcl_no LIKE '%'||#sector_nm#||'%' /*필지번호*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="solar_1">
	    		<![CDATA[ /*고시면적*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a11, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#solar_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="solar_2">
	    		<![CDATA[ /*고시면적*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a11, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#solar_2#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hbdtldr_1">
	    		<![CDATA[ /*건폐율*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hbdtldr_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hbdtldr_2">
	    		<![CDATA[ /*건폐율*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hbdtldr_2#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hcpcty_rt_1">
	    		<![CDATA[ /*용적률*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a12, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hcpcty_rt_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hcpcty_rt_2">
	    		<![CDATA[ /*용적률*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a12, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hcpcty_rt_2#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hg_limit">
				hg_lmtt LIKE '%'||#hg_limit#||'%' /*높이제한*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="taruse">
				appn_prpos LIKE '%'||#taruse#||'%' /*지정용도*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="soldkind">
				sle_mth LIKE '%'||#soldkind#||'%' /*판매방법*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="soldgb">
				sle_at IN
				<iterate property="soldgb" open="(" close=")"
					conjunction=","> #soldgb[]# </iterate>
				/*판매여부*/
			</isNotEmpty>
			ORDER BY sn
		</isNotEmpty>
		<isEmpty property="kind">
			<!-- 테이블이 없음 -->
			SELECT
			gid,
			a2 AS a8,
			a7 AS a11,
			a13 AS a13,
			a15 AS a12,
			a1 AS a3,
			a22 AS a6,

			null AS a2, null AS a4, null AS a5, null AS a7, null AS a14, null AS a15,
			null AS a19, null AS a20,
			ST_X(ST_PointOnSurface(geom)) AS addr_x,
			ST_Y(ST_PointOnSurface(geom)) AS addr_y,
			ST_AsText(geom) AS geom,
			ST_AsGeoJSON(ST_Transform(geom,900913))::json As geometry -- ycb 검색결과 전체표출 추가 20180626
			FROM sh_district
			WHERE
			a1 IN
			<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
			</iterate>
			/*사업지구*/
			<isNotEmpty prepend="AND" property="sector_nm">
				a2 LIKE '%'||#sector_nm#||'%' /*필지번호*/
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="solar_1">
	    		<![CDATA[ /*고시면적*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#solar_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="solar_2">
	    		<![CDATA[ /*고시면적*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#solar_2#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hbdtldr_1">
	    		<![CDATA[ /*건폐율*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hbdtldr_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hbdtldr_2">
	    		<![CDATA[ /*건폐율*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hbdtldr_2#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hcpcty_rt_1">
	    		<![CDATA[ /*용적률*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hcpcty_rt_1#)::double precision
	     		]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hcpcty_rt_2">
	    		<![CDATA[ /*용적률*/
	     			REGEXP_REPLACE( REGEXP_REPLACE( a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hcpcty_rt_2#)::double precision
	     		]]>
			</isNotEmpty>
			ORDER BY gid
		</isEmpty>

	</select>

	<select id="gisinfoDAO.gis_search_dist_list_residual"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 기능 제거 부분 -->
		/*========== 사업구분 정보 - 잔여지 ==========*/
		SELECT
		gid,
		A.a2 AS a8,
		A.a7 AS a11,
		A.a13 AS a13,
		A.a15 AS a12,
		A.a1 AS a3,
		A.a22 AS a6,

		null AS a2, null AS a4, null AS a5, null AS a7, null AS a14, null AS a15,
		null AS a19, null AS a20,

		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry -- ycb 검색결과 전체표출 추가 20180626
		FROM sh_district A
		WHERE
		a6 IS NULL AND
		a1 IN
		<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
		</iterate>
		/*사업지구*/
		<isNotEmpty prepend="AND" property="sector_nm">
			a2 LIKE '%'||#sector_nm#||'%' /*필지번호*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="solar_1">
    		<![CDATA[ /*고시면적*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#solar_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="solar_2">
    		<![CDATA[ /*고시면적*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#solar_2#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hbdtldr_1">
    		<![CDATA[ /*건폐율*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hbdtldr_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hbdtldr_2">
    		<![CDATA[ /*건폐율*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hbdtldr_2#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hcpcty_rt_1">
    		<![CDATA[ /*용적률*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hcpcty_rt_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hcpcty_rt_2">
    		<![CDATA[ /*용적률*/
     			REGEXP_REPLACE( REGEXP_REPLACE( a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hcpcty_rt_2#)::double precision
     		]]>
		</isNotEmpty>
		ORDER BY gid
	</select>

	<select id="gisinfoDAO.gis_search_dist_list_unsold"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 기능 제거 부분 -->
		/*========== 사업구분 정보 - 미매각지 ==========*/
		SELECT
		A.gid,
		A.a2 AS a8,
		A.a7 AS a11,
		A.a13 AS a13,
		A.a15 AS a12,
		A.a1 AS a3,
		A.a22 AS a6,

		null AS a2, null AS a4, null AS a5, null AS a7, null AS a14, null AS a15,
		null AS a19, null AS a20,

		ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y,
		ST_AsText(A.geom) AS geom,
		ST_AsGeoJSON(ST_Transform(A.geom,900913))::json As geometry -- ycb 검색결과 전체표출 추가 20180626
		FROM sh_district A,
		sh_district_unsold B
		WHERE
		A.a1 = B.a3 AND A.a2 = B.a1 AND A.a3 = B.a2 AND
		A.a1 IN
		<iterate property="gb" open="(" close=")" conjunction=","> #gb[]#
		</iterate>
		/*사업지구*/
		<isNotEmpty prepend="AND" property="sector_nm">
			A.a2 LIKE '%'||#sector_nm#||'%' /*필지번호*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="solar_1">
    		<![CDATA[ /*고시면적*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#solar_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="solar_2">
    		<![CDATA[ /*고시면적*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a7, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#solar_2#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hbdtldr_1">
    		<![CDATA[ /*건폐율*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hbdtldr_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hbdtldr_2">
    		<![CDATA[ /*건폐율*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a13, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hbdtldr_2#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hcpcty_rt_1">
    		<![CDATA[ /*용적률*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision >= (#hcpcty_rt_1#)::double precision
     		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="hcpcty_rt_2">
    		<![CDATA[ /*용적률*/
     			REGEXP_REPLACE( REGEXP_REPLACE( A.a15, '[^a-zA-Z0-9]+', '','g'),'[[:alpha:]]','','g')::double precision <= (#hcpcty_rt_2#)::double precision
     		]]>
		</isNotEmpty>
		ORDER BY A.gid
	</select>


	<!-- 토지검색 상세정보20240807 LEK 수정 공시지가 및 토지특성정보-->
	<select id="gisinfoDAO.gis_land_detail_1" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
	<![CDATA[	
		SELECT * FROM
		(
			select
				p.*,
				s.lad_ar as plot_ar,
				--s.lndcgr_code as jimok,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'JIMOK' AND s.lndcgr_code = B.mlsfc_code) AS jimok,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND s.spfc_code_1 = B.mlsfc_code) AS spfc2,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'LAND_USE' AND s.lad_use_sittn_code = B.mlsfc_code) AS land_use,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_HL' AND s.tpgrph_hg_code = B.mlsfc_code) AS geo_hl,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_FORM' AND s.tpgrph_frm_code = B.mlsfc_code) AS geo_form,
				(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'ROAD_SIDE' AND s.road_side_code = B.mlsfc_code) AS road_side,
				'1'::text AS jo
			from
				(
				select
					pnu,
					signgu_code,
					legaldong_code,
					(select signgu_korean_nm as sig_kor_nm from landsys_gis.signgu_administ_bndry B where pn.signgu_code = B.signgu_code group by B.signgu_code,B.signgu_korean_nm) AS sig,
					CASE 
					WHEN regstr_se_code = '2' THEN '산'
					ELSE '' END AS land_gbn,
					SPLIT_PART(lnm,'-',1) as mnnm,
					CASE
					WHEN POSITION('-' IN lnm) != 0 THEN SPLIT_PART(lnm,'-',2)
					ELSE '' END AS slno,
					pnilp,
					stdmt  
				from
					landsys_gis.PNILP as pn
				where
					pnu = #pnu# 
			
			)as p
			inner join
				landsys_gis.lad_chartr_info as s
			on p.pnu = s.pnu
		) AA
			LEFT JOIN
			(
				SELECT
					'1'::text AS jo,
					concat(legaldong_nm,' ',lnm_lndcgr_smbol) as a3, '' as a4,
					ST_X(ST_PointOnSurface(B.the_geom)) AS addr_x,
					ST_Y(ST_PointOnSurface(B.the_geom)) AS addr_y,
					ST_AsText(B.the_geom) AS geom
				FROM landsys_gis.ctnu_lgstr_2024 B
				WHERE B.innb = #pnu# 
			) BB
			ON AA.jo = BB.jo
		]]>
	</select>
	
	<!-- 토지검색 상세정보20240828 LEK 수정 토지소유정보 -->
	<select id="gisinfoDAO.gis_land_detail_2" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		select
			pnu,
			posesn_se_code,
			posesn_se_nm as a11, --소유구분명
			cnrs_undtake as a12, --공유인수
			agrde_se, --연령대구분
			resdnc_se, --거주지구분
			ownship_change_cause, --소유권변동원인
			ownship_change_de, --소유권변동일자
			TO_CHAR(data_stdde,'YYYY-MM-DD')as data_stdde --데이터기준일
		FROM landsys_gis.lad_posesn_info
		WHERE pnu = #pnu#
	</select>
	
	<!-- 토지검색 상세정보20240828 LEK 수정  토지이용계획정보-->
	<select id="gisinfoDAO.gis_land_detail_3" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT 
			spfc_spcfc_nm_list --용도지역지구명목록
			,cnflc_at_list --저촉여부목록
		FROM landsys_gis.lad_use_plan_info
		WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_land_detail_4"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT * FROM landsys_gis.PNILP_SU
		WHERE pnu = #pnu#
	</select>

	<!-- 자산검색 상세정보 - 건물 -->
	<select id="gisinfoDAO.gis_buld_detail_1"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		A.manage_bild_regstr as manage_bild_regstr,
		A.plot_lc as plot_lc, A.rn_plot_lc as rn_plot_lc, A.buld_nm as buld_nm,
		A.spcl_nmfpc as spcl_nmfpc, A.blck as blck, A.lot as lot,
		A.else_lot_co as else_lot_co,
		A.plot_ar as plot_ar, A.bildng_ar as bildng_ar, A.bdtldr as bdtldr, A.totar as
		totar, A.measrmt_rt as cpcty_rt, A.measrmt_rt_calc_totar as
		cpcty_rt_calc_totar,
		A.main_prpos_code_nm as main_prpos_code_nm, A.etc_prpos as etc_prpos, A.hshld_co as
		hshld_co, A.fmly_co as funitre_co, A.main as main_bild_co,
		A.atach_bild_co as atach_bild_co, A.atach_bild_ar as atach_bild_ar,
		A.floor_parkng_co as floor_parkng_co,
		A.insdhous_mchne_alge as insdhous_mchne_alge, A.insdhous_mchne_ar as insdhous_mchne_ar,
		A.outhous_mchne_alge as outhous_mchne_alge, A.outhous_mchne_ar as
		outhous_mchne_ar, A.insdhous_self_alge as insdhous_self_alge,
		A.insdhous_self_ar as insdhous_self_ar, A.outhous_self_alge as
		outhous_self_alge, A.outhous_self_ar as outhous_self_ar,
		A.prmisn_de as prmisn_de, A.strwrk_de as strwrk_de, A.use_confm_de as
		use_confm_de, A.prmisn_no_year as prmisn_no_yy, A.prmisn_no_instt_code
		as prmisn_no_instt_code, A.prmisn_no_instt_code_nm as
		prmisn_no_instt_code_nm, A.prmisn_no_se_code as prmisn_no_se_code,
		A.prmisn_no_se_code_nm as prmisn_no_se_code_nm,A.ho_co as ho_co,
		A.energy_efcny_grad as energy_efcny_grad, A.energy_redcn_rt as
		energy_redcn_rt, A.energy_epi_score as energy_episcore,
		A.evrfrnd_bild_grad as evrfrnd_bild_grad, A.evrfrnd_bild_crtfc_score
		as evrfrnd_bild_crtfc_score, A.intlgnt_bild_evlutn as
		intlgnt_bild_evlutn, A.intlgnt_bild_score as intlgnt_bild_score,
		A.creat_de as creat_de,
		B.addr_x as addr_x, B.addr_y as addr_y, B.geom as geom
		FROM
		(SELECT
		manage_bild_regstr,
		plot_lc, rn_plot_lc, buld_nm, spcl_nmfpc as spcl_nmfpc, blck, lndpcl as lot,
		lndpcl_co as else_lot_co,
		plot_ar, bildng_ar, bdtldr, totar, measrmt_rt, measrmt_rt_calc_totar,
		main_prpos_code_nm, etc_prpos, hshld_co, fmly_co, main,
		atach_bild_co, atach_bild_ar, floor_parkng_co,
		insdhous_mchne_alge, insdhous_mchne_ar, outhous_mchne_alge, outhous_mchne_ar,
		insdhous_self_alge, insdhous_self_ar, outhous_self_alge,
		outhous_self_ar,
		prmisn_de, strwrk_de, use_confm_de, prmisn_no_year, prmisn_no_instt_code,
		prmisn_no_instt_code_nm, prmisn_no_se_code, prmisn_no_se_code_nm,
		ho_co,
		energy_efcny_grad, energy_redcn_rt, energy_epi_score, evrfrnd_bild_grad,
		evrfrnd_bild_crtfc_score, intlgnc_ty_bild_grad as intlgnt_bild_evlutn,
		intlgnc_ty_bild_crtfc_score as intlgnt_bild_score,
		creat_de as creat_de,
		'1'::text AS jo
		FROM landsys_gis.BILD_REGSTR_TOTLDR
		WHERE pnu = #pnu#
		<isNotEmpty prepend="AND" property="pk">
			manage_bild_regstr = #pk#
		</isNotEmpty>
		ORDER BY manage_bild_regstr
		) A
		LEFT JOIN
		(SELECT
		pnu as a2,
		'1'::text AS jo,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom
		FROM landsys_gis.gis_buld_unity_info_su WHERE pnu = #pnu#) B
		ON A.jo = B.jo
	</select>
	<select id="gisinfoDAO.gis_buld_detail_2"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		manage_bild_regstr,
		plot_lc, rn_plot_lc, buld_nm,
		spcl_nmfpc as spcl_nmfpc, blck, lndpcl as lot,
		aptcmpl_nm, ho_nm, floor_se_code_nm, floor_no as floor_no,
		creat_de as creat_de
		FROM landsys_gis.BILD_REGSTR_POSSESIONLEDGER
		WHERE pnu = #pnu#
		<isNotEmpty prepend="AND" property="pk">
			manage_bild_regstr =
			#pk#
		</isNotEmpty>
		ORDER BY manage_bild_regstr
	</select>
	<select id="gisinfoDAO.gis_buld_detail_3"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		A.manage_bild_regstr,
		A.plot_lc, A.rn_plot_lc, A.buld_nm, A.spcl_nmfpc, A.blck, A.lot, A.else_lot_co,
		A.plot_ar, A.bildng_ar, A.bdtldr, A.totar, A.measrmt_rt,
		A.measrmt_rt_calc_totar,
		A.strct_code_nm, A.etc_strct,
		A.main_prpos_code_nm, A.etc_prpos,
		A.rf_code_nm, A.etc_rf,
		A.hshld_co, A.fmly_co,
		A.hg
		, A.ground_floor_co 
		, A.undgrnd_floor_co
		, A.rdng_elvtr_co 
		,A.emgnc_elvtr_co
		, A.atach_bild_co, A.atach_bild_ar,
		A.floor_aptcmpl_totar,
		A.insdhous_mchne_alge, A.insdhous_mchne_ar, A.outhous_mchne_alge, A.outhous_mchne_ar,
		A.insdhous_self_alge, A.insdhous_self_ar, A.outhous_self_alge,
		A.outhous_self_ar,
		A.prmisn_de, A.strwrk_de, A.use_confm_de, A.prmisn_no_year, A.prmisn_no_instt_code,
		A.prmisn_no_instt_code_nm, A.prmisn_no_se_code,
		A.prmisn_no_se_code_nm
		, A.ho_co
		,A.energy_efcny_grad, A.energy_redcn_rt, A.energy_epi_score, A.evrfrnd_bild_grad,
		A.evrfrnd_bild_crtfc_score, A.intlgnt_bild_evlutn,
		A.intlgnt_bild_score,
		A.creat_de,
		B.addr_x, B.addr_y, B.geom
		FROM
		(SELECT
		manage_bild_regstr,
		plot_lc, rn_plot_lc, buld_nm, spcl_nmfpc as spcl_nmfpc, blck, lndpcl as lot,
		lndpcl_co as else_lot_co,
		plot_ar, bildng_ar, bdtldr, totar, measrmt_rt, measrmt_rt_calc_totar,
		strct_code_nm, etc_strct,
		main_prpos_code_nm, etc_prpos,
		rf_code_nm, etc_rf,
		hshld_co, fmly_co,
		hg, ground_floor_co, undgrnd_floor_co, rdng_elvtr_co, emgnc_elvtr_co, 
		atach_bild_co, atach_bild_ar, floor_aptcmpl_totar,
		insdhous_mchne_alge, insdhous_mchne_ar, outhous_mchne_alge, outhous_mchne_ar,
		insdhous_self_alge, insdhous_self_ar, outhous_self_alge,
		outhous_self_ar,
		prmisn_de, strwrk_de, use_confm_de, prmisn_no_year, prmisn_no_instt_code,
		prmisn_no_instt_code_nm, prmisn_no_se_code, prmisn_no_se_code_nm,
		ho_co,
		energy_efcny_grad, energy_redcn_rt, energy_epi_score, evrfrnd_bild_grad,
		evrfrnd_bild_crtfc_score, intlgnc_ty_bild_grad as intlgnt_bild_evlutn,
		intlgnc_ty_bild_crtfc_score as intlgnt_bild_score,
		creat_de,
		'1'::text AS jo
		FROM landsys_gis.BILD_REGSTR_TITLELEDGER
		WHERE pnu = #pnu#
		<isNotEmpty prepend="AND" property="pk">
			manage_bild_regstr = #pk#
		</isNotEmpty>
		ORDER BY manage_bild_regstr
		) A
		LEFT JOIN
		(SELECT
		pnu as a2,
		'1'::text AS jo,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom
		FROM landsys_gis.gis_buld_unity_info_su WHERE pnu = #pnu#) B
		ON A.jo = B.jo
	</select>

	<!-- 자산검색 상세정보 - 사업지구 -->
	<select id="gisinfoDAO.gis_dist_detail_1"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*기본-마곡지구*/
		SELECT
		*,
		null AS addr_x,
		null AS addr_y,
		null AS geom_as
		FROM fg_merge_temp
		WHERE gid = #pk#
	</select>
	<select id="gisinfoDAO.gis_dist_detail_2"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*그 외 사업지구*/
		SELECT
		*,
		ST_X(ST_PointOnSurface(geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(geom)) AS addr_y,
		ST_AsText(geom) AS geom_as
		FROM sh_district
		WHERE gid = #pk#::integer
	</select>
	<select id="gisinfoDAO.gis_dist_detail_3"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*미매각지-추가정보*/
		SELECT
		B.*,
		ST_X(ST_PointOnSurface(geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(geom)) AS addr_y,
		ST_AsText(geom) AS geom_as
		FROM sh_district A, sh_district_unsold B
		WHERE A.a1 = B.a3
		AND A.a2 = B.a1 AND A.a3 = B.a2 AND A.gid = #pk#::integer
	</select>

	<!-- 자산검색 상세정보 - 자산정보 -->
	<select id="gisinfoDAO.gis_sh_detail_guk_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, sn as a1, ctprvn_nm as a2,signgu_nm as a3,jrsd_dept as
		a4,fsse as a5,prprty_se as a6,
		prprty_knd as a7, locplc_lnm as a8, locplc_rn as a9, lndpcl_ar as a10,
		lndcgr_nm as a11,
		manage_sttus as a12,ground_floor_co as a13,undgrnd_floor_co as a14,bildng_year as
		a15,prcuse_posbl as a16,
		spfc as a17,charger_cttpc as a18,mgc as a19,etc as a20, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.golnd_gnrl WHERE prprty_knd = '토지' AND pnu =
		#pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_tmseq_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, sn as a1,manage_sttus as a2,trust_de as a3,'' as a4,'' as
		a5,prprty_cl_nm as a6,ctprvn_nm as a7,signgu_nm as a8,
		emd_nm as a9,mtlnbr as a10,mnnm as a11,slno as a12,adres as a13,lndcgr_nm as
		a14,ctylnd_sttus as a15,
		ctylnd_ar as a16, ctylnd_ar as a17,ctylnd_ar as a18,'' as a19,'' as a20,'' as
		a21,'' as a22,'' as a23,'' as a24, '' as a25, '' as a26, '' as a27, ''
		as a28,
		'' as a29, '' as a30, '' as a31, '' as a32, '' as a33, '' as a34, '' as
		a35, '' as a36,
		'' as a37, '' as a38, '' as a39, '' as a40, '' as a41, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.cnsgn_manage_ctylnd WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_region_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,prprty_se as a2,atdrc as a3, locplc as a4, ar as
		a5,use_sttus as a6,
		manage_sttus as a7, loan_chrge as a8, cmpnstn_amount as a9, amount as
		a10,partclr_matter as a11,
		etc as a12, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM
		landsys_gis.atdrc_mndt_manage_ctylnd_info WHERE prprty_se = '토지' AND
		pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_owned_city"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,signgu as a2,prprty as a3, prprty_knd as
		a4,administ_prprty_se as a5,
		lndpcl_se_nm as a6, locplc as a7, ctprvn as a8,signgu as a9,emd as
		a10,lndpcl_se_code as a11,mnnm as a12,slno as a13,
		detail_adres as a14,join_at as a15, input_sys as a16,real_lndcgr as
		a17,cdsrgst_lndcgr as a18,prprty_qy as a19,
		prprty_ar as a20,bild_hshld_co as a21,regstr_amount as a22,stdyy_amount as a23, prprty_manage_instt as
		a24,truinst as a25, acqs_de as a26,acqs_confm as a27,
		acqs_mth as a28, prprty_nm as a29, regist_de as a30,rm as a31, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.atdrc_hold_manage_lad_ctylnd_info WHERE prprty
		= '토지' AND pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_owned_guyu"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,atdrc as a2, prprty_nm as a3,posesn_se_code as
		a4,prprty_prpos_code as a5,administ_prprty_code as a6,
		accnut_se_code as a7, prprty_manage_instt as a8, '' as a9, '' as a10,'' as a11, prprty_stle_se
		as a12, '' as a13,'' as a14,
		prprty_nm as a15, '' as a16, atdrc as a17, '' as a18, '' as a19, '' as a20, ''
		as a21, '' as a22, '' as a23,'' as a24,
		'' as a25,'' as a26,'' as a27,'' as a28, '' as a29, '' as a30,
		regstr_amount as a31, accnut_stdr_amount as a32, acqspc as a33, acqdt
		as a34,
		acqs_mth_se_code as a35, acqs_resn as a36, loan_posbl_at as a37, sale_lmtt_at as a38,
		sale_lmtt_de as a39, rm as a40, lndcgr as a41, real_lndcgr_code as
		a42, ar as a43, rl_ar as a44,
		olnlp as a45,acqs_ar as a46, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM
		landsys_gis.atdrc_hold_manage_lad_gulnd_info WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_residual_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		pnu as pnu,SN as a2,CMPTNC_GU as a3,LNM as a4,LNDCGR,AR as
		a5,CMPTNC_CNTER as a6,PARTCLR_MATTER as a7,RM as a8,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM LANDSYS_GIS.v_tb_remndr_area WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_unsold_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 테이블이 없음 -->
		select a.sn as a2,a.dstrc_nm as a3,a.lndpcl_nm as a4,a.lclas_code as
		a5,a.mlsfc_code as a6,a.sclas_code as a7,
		a.lc as a8,a.sale_trget_at as
		a9,a.trget_ar as a10,a.sale_ar as a11,a.rtent_ar as a12,
		-- a.evl_amount as a13,a.untpc as a14, a.pc_pnttm as a15,a.sle_mth as a16,a.pc_stdr as a17,
		a.suply_trget_stdr as a18, a.spfc as a19,a.bdtldr as a20,a.flarra as a21,a.floor_co_lmtt as a22
		-- ,a.un_sle_resn as a23, ,a.field_25 as a25
		,a.lttot_pblanc_dscss_hist as a24,a.the_geom as
		geom,
		ST_X(ST_PointOnSurface(a.the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(a.the_geom)) AS addr_y, ST_AsText(a.the_geom)
		AS geom_as
		,b.pnu as pnu,b.adres as adres from
		landsys_gis.v_tb_un_sale_area a,
		(select * from landsys_gis.ctnu_lgstr_su) b
		where
		st_intersects(st_transform(a.the_geom, 5179) ,
		st_transform(b.the_geom, 5179))
		and ST_Area(ST_Intersection(a.the_geom,
		b.the_geom)) >= st_area(a.the_geom)/2
		and b.pnu = #pnu# and a.sn = #sn#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_invest"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 테이블이 없음 -->
		SELECT
		*,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom)) AS addr_y, ST_AsText(geom)
		AS geom_as
		FROM data_invest WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_site"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		gid, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
		a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29,
		a30, a31, a32, pnu,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom)) AS addr_y, ST_AsText(geom)
		AS geom_as
		FROM data_public_site WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_parking"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- pnu가 없음 -->
		SELECT
		gid, n_nb, gu, data_s, p_n, juso, note, l_juso, l_pnu, gb, op, p_nb, l_gb,
		p_form, update, p_code, o_gb, o_gb_kor, t_nb, p_if, p_if_kor, pr_p_nb,
		pr_update, f_gb, f_gb_kor,
		nfo_gb, nfo_gb_k, wd_o_t, wd_c_t, we_o_t, we_c_t, hd_o_t, hd_c_t, f_d_syn,
		sat_f_gb, sat_f_kor, hd_f_gb, hd_f_kor, month_f, p_ad_nb, un_f chara,
		un_t, add_f, add_t, bus_un_f,
		bus_un_t, bus_add_t, b_add_f, d_max_f, pnu,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom)) AS addr_y, ST_AsText(geom)
		AS geom_as
		FROM data_public_parking WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_generations"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, usgstt as a1, locplc as a2,owner as a3, locplc as a4, '' as
		a5,'' as a6, '' as a7, '' as a8, '' as a9, '' as a10,
		nearby_statn as a11, ar as a12, prpos_estb as a13, prpos_change as a14,bsns_sttus as
		a15, hshld_sm as a16, hshld_public as a17, hshld_prvopr as a18, ho_sm as
		a19,
		ho_public as a20, ho_prvopr as a21, suply as a22, etc as a23, bsns_se as a24, se
		as a25, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM
		landsys_gis.statn_cfr_bsns_cndcy_area_info WHERE pnu = #pnu#
	</select>
		<select id="gisinfoDAO.gis_sh_detail_council_land"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, hsmp_code as a1, '' as a2, se as a3, manage_mth as a4,
		suply_ty as a5,hsmp_nm as a6, cnter as a7, wrdofc as a8,lnm_adres as
		a9,rdnmadr as a10, zip as a11,ty as a12, suply_de as a13, compet_de as
		a14, '' as a15, hsmp_co as a16, '' as a17, '' as a18, cnsgn_cnvrsde as
		a19, '' as a20,
		undgrnd_floor_co as a21, ground_lwet_floor as a22, ground_top_floor as a23, heat as
		a24, parkng_alge as a25, elvtr_co as a26, '' as a27, '' as a28, ''
		as a29, '' as a30, '' as a31, '' as a32, '' as a33, '' as a34, '' as
		a35, '' as a36, '' as a37, '' as a38, '' as a39,
		'' as a40, '' as a41, '' as a42, '' as a43, '' as a44, '' as a45, '' as
		a46,
		'' as a47, '' as a48, '' as a49, '' as a50, '' as a51, '' as a52, '' as
		a53, '' as a54, '' as a55, '' as a56, '' as a57, '' as a58, '' as a59,
		'' as a60, '' as a61, '' as a62, '' as a63, '' as a64, '' as a65, ''
		as a66, '' as a67, '' as a68, '' as a69, '' as a70, '' as a71, '' as
		a72, '' as a73, '' as a74, '' as a75, '' as a76, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.rthous_hsmp_hist_info WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_minuse"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as objectid_1, '' as objectid, '' as jibun, '' as bchk, ''
		as row_id, '' as id, '' as si, '' as juso,
		'' as do_cd, '' as dong, '' as m, '' as jibun_1, '' as jimok, '' as
		jimok_n, plot_ar as area, lad_posesn_se as own, '' as pnu_1, signgu_nm as
		jache_gu,
		'' as no, fclty_nm as name, locplc as jibun_2, lndcgr as jimok_2, '' as
		pnu_12, bildng_year as build_year, lad_posesn_se as land_so, plot_ar,
		now_ar as stat_count, court_ar as court_number,addi_ar as additional_number,
		'' as shape_leng, '' as shape_le_1, '' as shape_area, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.low_use_pblfclt_info WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_industry"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid,'' as objectid_1,'' as objectid, lnm as jibun, '' as bchk, ''
		as row_id, '' as id, '' as si, signgu_nm as juso,
		'' as do_cd, aptcmpl_nm as dong, '' as m, '' as jibun_1, '' as jimok,
		lndcgr as jimok_n, ar as area, posesn_se as own, '' as pnu_1, '' as
		pnu_12,
		'' as stdmt, '' as land_seqno, '' as nb, se_1 as gb, '' as fid_02_ji, ''
		as fid_use, se_2 as gubun, rm_1 as bigo, '' as no, fclty_nm as
		sisul_name,
		rm_2 as bigo_1, '' as shape_leng, '' as shape_le_1, '' as shape_area, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.public_plot_cnf_area_info WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_priority"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as objectid_1, '' as objectid, lnm as jibun, '' as bchk,
		'' as row_id, '' as id, '' as si, signgu_nm as juso,
		'' as do_cd, aptcmpl_nm as dong, '' as m, '' as jibun_1, '' as jimok,
		lndcgr as jimok_n, ar as area, posesn_se as own, '' as pnu_1,
		lvlh_dstrct as area_circle,
		emphs_code as focus_co, cndcy_lnm as junglim, last_plan_plot as final_stroke, '' as
		final_stroke, '' as pnu_12, use_sttus as use_stat, prcuse_code as use_co,
		'' as shape_leng,
		'' as shape_le_1, '' as shape_area, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.emphs_prcuse_ctylnd_info WHERE pnu = #pnu#
	</select>

	<select id="gisinfoDAO.gis_sh_detail_guk_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, sn as a1, ctprvn_nm as a2,signgu_nm as a3,jrsd_dept as
		a4,fsse as a5,prprty_se as a6,
		prprty_knd as a7, locplc_lnm as a8, locplc_rn as a9, lndpcl_ar as a10,
		lndcgr_nm as a11,
		manage_sttus as a12,ground_floor_co as a13,undgrnd_floor_co as a14,bildng_year as
		a15,prcuse_posbl as a16,
		spfc as a17,charger_cttpc as a18,mgc as a19,etc as a20, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.golnd_gnrl WHERE prprty_knd = '건물' AND pnu =
		#pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_tmseq_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, sn as a1,manage_sttus as a2,trust_de as a3,'' as a4,'' as
		a5,prprty_cl_nm as a6,ctprvn_nm as a7,signgu_nm as a8,
		emd_nm as a9,mtlnbr as a10,mnnm as a11,slno as a12,adres as a13,lndcgr_nm as
		a14,ctylnd_sttus as a15,
		ctylnd_ar as a16, ctylnd_ar as a17,ctylnd_ar as a18,'' as a19,'' as a20,'' as
		a21,'' as a22,'' as a23,'' as a24, '' as a25, '' as a26, '' as a27, ''
		as a28,
		'' as a29, '' as a30, '' as a31, '' as a32, '' as a33, '' as a34, '' as
		a35, '' as a36,
		'' as a37, '' as a38, '' as a39, '' as a40, '' as a41, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.cnsgn_manage_ctylnd WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_region_buld"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,prprty_se as a2,atdrc as a3, locplc as a4, ar as
		a5,use_sttus as a6,
		manage_sttus as a7, loan_chrge as a8, cmpnstn_amount as a9, amount as
		a10,partclr_matter as a11,
		etc as a12, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM
		landsys_gis.atdrc_mndt_manage_ctylnd_info WHERE prprty_se = '건물' AND
		pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_owned_region"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,signgu as a2,prprty as a3, prprty_knd as
		a4,administ_prprty_se as a5,
		lndpcl_se_nm as a6, locplc as a7, ctprvn as a8,signgu as a9,emd as
		a10,lndpcl_se_code as a11,mnnm as a12,slno as a13,
		detail_adres as a14,join_at as a15, input_sys as a16,real_lndcgr as
		a17,cdsrgst_lndcgr as a18,prprty_qy as a19,
		prprty_ar as a20,bild_hshld_co as a21,regstr_amount as a22,stdyy_amount as a23, prprty_manage_instt as
		a24,truinst as a25, acqs_de as a26,acqs_confm as a27,
		acqs_mth as a28, prprty_nm as a29, regist_de as a30,rm as a31, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.atdrc_hold_manage_lad_ctylnd_info WHERE prprty
		= '건물' AND pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_owned_seoul"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, '' as a1,signgu as a2,prprty as a3, prprty_knd as
		a4,administ_prprty_se as a5,
		lndpcl_se_nm as a6, locplc as a7, ctprvn as a8,signgu as a9,emd as
		a10,lndpcl_se_code as a11,mnnm as a12,slno as a13,
		detail_adres as a14,join_at as a15, input_sys as a16,real_lndcgr as
		a17,cdsrgst_lndcgr as a18,prprty_qy as a19,
		prprty_ar as a20,bild_hshld_co as a21,regstr_amount as a22,stdyy_amount as a23, prprty_manage_instt as
		a24,truinst as a25, acqs_de as a26,acqs_confm as a27,
		acqs_mth as a28, prprty_nm as a29, regist_de as a30,rm as a31, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.atdrc_hold_manage_lad_ctylnd_info WHERE prprty
		= '건물' AND pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_cynlst"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		gid, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
		a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29,
		a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43,
		a44, a45, a46,
		a47, a48, a49, a50, a51, pnu,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom)) AS addr_y, ST_AsText(geom)
		AS geom_as
		FROM data_cynlst WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_buld_a"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- a없음 -->
		SELECT
		*,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM
		landsys_gis.NATN_PBLINST_POSESN_PBLBLD WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_buld_b"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- b없음 -->
		SELECT
		*,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom)) AS addr_y, ST_AsText(geom)
		AS geom_as
		FROM data_public_buld_b WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_buld_c"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		gid, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, pnu,
		ST_X(ST_PointOnSurface(geom)) AS addr_x, ST_Y(ST_PointOnSurface(geom))
		AS addr_y, ST_AsText(geom) AS geom_as
		FROM data_public_buld_c WHERE pnu
		= #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_public_asbu"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid,pblinstt_nm as a2,locplc as a3,pnu,before_area as a4,transr_de as a5,before_sttus
		as a6,pblinstt_relate_miryfc as a7,public_instt_ty as a8,public_instt_fond_yy
		as a9,
		public_instt_fond_law as a10,public_instt_skll_grup as a11,data_origin as a12,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.pblinstt_transr_buld WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_purchase"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		<!-- 매칭이 안됌 -->
		SELECT
		ogc_fid as gid,bsns_code as a1, aptcmpl as a2, ho as a3, suply_sn as a4, '' as
		a5, '' as a6, '' as a7, '' as a8, '' as a9, rent_house_se as a10,
		rdnmadr_brtc as a11, rdnmadr_signgu_nm as a12,
		rdnmadr_rn as a13, rdnmadr_ground_undgrnd_se as a14, rdnmadr_buld_mnnm as a15,
		rdnmadr_buld_slno as a16, house_ty as a17, hsmp_nm as a18, compet_de
		as a19, lttot_cnvrs_prarnde as a20, hshld_co as a21,
		buld_stle as a22, heat_mthd as a23, parkng_alge as a24, elvtr_instl_at as a25,
		aptcmpl_nm as a26, blnc_nm as a27, tot_floor_co as a28, dvr_ar as a29,
		cmnuse_ar as a30, room_co as a31, ho_nm as a32,suply_ty as a33,
		etyrm_at as a34, etyrm_resn as a35, puchas_de as a36, floor_co as a37,
		acqs_ty as a38, lttot_cnvrs_at as a39, lttot_cnvrs_de as a40,
		stdr_rent_gtn as a41, stdr_rntchrg as a42, stdr_cnvrs_gtn_lmt as a43,
		cntrctr_qualf as a44, cntrct_de as a45, rl_mvn_de as a46,
		ls_bgnde as a47, ls_endde as a48, rent_gtn as a49, mt_rntchrg as a50,
		cnvrs_gtn as a51, '' as a52, '' as a53, '' as a54, '' as a55, '' as
		a56, '' as a57, aptcmpl_ho_sttus as a58, '' as a59, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(the_geom)) AS addr_y, ST_AsText(the_geom) AS
		geom_as
		FROM landsys_gis.puchas_rthous_hist_info WHERE pnu = #pnu#
	</select>
	<select id="gisinfoDAO.gis_sh_detail_declining"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT
		ogc_fid as gid, sn as a1, '' as a2, adres as a3, year as a4, plot_ar as a5,
		sm as a6, reside as a7, etyrm as a8, cls as a9,
		priort as a10, gu as a11, dong as a12, mnnm as a13,slno as a14, mtlnbr as
		a15,etc as a16, pnu,
		ST_X(ST_PointOnSurface(the_geom)) AS addr_x, ST_Y(ST_PointOnSurface(the_geom)) AS addr_y,
		ST_AsText(the_geom) AS geom_as
		FROM landsys_gis.spanuat_pcsrnhs WHERE
		pnu = #pnu#
	</select>


	<!-- 자산검색 상세정보 - 관련사업정보 -->
	<select id="gisinfoDAO.gis_data_detail_1"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.*, ST_X(ST_PointOnSurface(A.geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.geom)) AS addr_y, ST_AsText(A.geom) AS
		geom_as
		FROM data_city_activation A, (SELECT pnu as a1, the_geom as
		geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu = #pnu#) B
		WHERE
		business_type IN
		<iterate property="city_activation_val" open="(" close=")"
			conjunction=","> #city_activation_val[]# </iterate>
		<isNotEmpty prepend="AND" property="city_activation">
			gid IN
			<iterate property="city_activation" open="(" close=")"
				conjunction=","> #city_activation[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) , st_transform(A.geom,
		5179)) AND ST_Area(ST_Intersection(B.geom, A.geom)) >=
		st_area(B.geom)/2
		ORDER BY gid
	</select>
	<select id="gisinfoDAO.gis_data_detail_2"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.id as id,A.bsns_se as gubun,A.bsns_zone_nm as
		area_name,A.atdrc as jache_gu
		,A.lc as location,A.bsns_propse_ar as
		area_space,'' as area_earth,A.slctn_year as choice
		,A.prtn_step as
		execution_phase,A.prtn_de as execution_date,A.inhbtnt_orgnzt as
		human_group
		,A.bsns_dstrc_chartr as charact,A.relis_de,A.etc_chartr
		as envment_etc,ST_X(ST_PointOnSurface(A.the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.the_geom)) AS addr_y, ST_AsText(A.the_geom)
		AS geom_as
		FROM landsys_gis.reside_envrn_manage_bsns A, (SELECT pnu as
		a1, the_geom as geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu = #pnu#)
		B
		WHERE prtn_step IN
		<iterate property="house_envment_val" open="(" close=")"
			conjunction=","> #house_envment_val[]# </iterate>
		<isNotEmpty prepend="AND" property="house_envment">
			ogc_fid IN
			<iterate property="house_envment" open="(" close=")"
				conjunction=","> #house_envment[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) ,
		st_transform(A.the_geom, 5179)) AND ST_Area(ST_Intersection(B.geom,
		A.the_geom)) >= st_area(B.geom)/2
		ORDER BY ogc_fid
	</select>
	<select id="gisinfoDAO.gis_data_detail_3"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.id as id,A.hope_plot_se as gubun,A.hope_plot_zone_nm as
		area_name,A.hope_plot_bsns_knd as business_type,
		A.atdrc as
		jache_gu,A.lc as location,A.bsns_propse_ar as
		area_space,A.newtown_relis_area as newtown,A.relis_area_nm as
		relrease_cause,
		A.relis_year as relrease_year,A.spanuat_idex as
		decline_index,A.chartr_1 as charact,A.chartr_2 as
		charact2,A.chartr_3 as charact3_area,
		ST_X(ST_PointOnSurface(A.the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.the_geom)) AS addr_y, ST_AsText(A.the_geom)
		AS geom_as
		FROM landsys_gis.hope_area_bsns A, (SELECT pnu as a1,
		the_geom as geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu = #pnu#) B
		WHERE hope_plot_bsns_knd IN
		<iterate property="hope_land_val" open="(" close=")"
			conjunction=","> #hope_land_val[]# </iterate>
		<isNotEmpty prepend="AND" property="hope_land">
			ogc_fid IN
			<iterate property="hope_land" open="(" close=")"
				conjunction=","> #hope_land[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) ,
		st_transform(A.the_geom, 5179)) AND ST_Area(ST_Intersection(B.geom,
		A.the_geom)) >= st_area(B.geom)/2
		ORDER BY ogc_fid
	</select>
	<select id="gisinfoDAO.gis_data_detail_4"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.id as id,A.relis_zone_se as gubun,A.relis_zone_nm as
		area_name,A.relis_zone_ty as business_type,A.atdrc as jache_gu,
		A.lc as
		location,A.relis_zone_ar as area_space,A.relis_de as
		release_date,A.basis_law as bigo_release,A.ntfc_no as gosi_num,
		ST_X(ST_PointOnSurface(A.the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.the_geom)) AS addr_y, ST_AsText(A.the_geom)
		AS geom_as
		FROM landsys_gis.relis_area A, (SELECT pnu as a1, the_geom
		as geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu = #pnu#) B
		WHERE
		relis_zone_ty IN
		<iterate property="release_area_val" open="(" close=")"
			conjunction=","> #release_area_val[]# </iterate>
		<isNotEmpty prepend="AND" property="release_area">
			ogc_fid IN
			<iterate property="release_area" open="(" close=")"
				conjunction=","> #release_area[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) ,
		st_transform(A.the_geom, 5179)) AND ST_Area(ST_Intersection(B.geom,
		A.the_geom)) >= st_area(B.geom)/2
		ORDER BY ogc_fid
	</select>
	<select id="gisinfoDAO.gis_data_detail_5"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.adstrd_code as adm_dr_cd,A.adstrd_nm as adm_dr_nm,A.ar as
		area,
		A.nghbrhd as recycle,A.ecnmy as economy,A.cmpnd as
		population,ST_X(ST_PointOnSurface(A.the_geom)) AS addr_x,
		ST_Y(ST_PointOnSurface(A.the_geom)) AS addr_y, ST_AsText(A.the_geom)
		AS geom_as
		FROM landsys_gis.cty_reviv_spanuat_area_adstrd A, (SELECT pnu
		as a1, the_geom as geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu =
		#pnu#) B
		WHERE
		<isEqual property="sub_p_decline_gb" compareValue="01">
			nghbrhd IN
			<iterate property="sub_p_decline_val" open="(" close=")"
				conjunction=","> #sub_p_decline_val[]# </iterate>
		</isEqual>
		<isEqual property="sub_p_decline_gb" compareValue="02">
			ecnmy IN
			<iterate property="sub_p_decline_val" open="(" close=")"
				conjunction=","> #sub_p_decline_val[]# </iterate>
		</isEqual>
		<isEqual property="sub_p_decline_gb" compareValue="03">
			cmpnd IN
			<iterate property="sub_p_decline_val" open="(" close=")"
				conjunction=","> #sub_p_decline_val[]# </iterate>
		</isEqual>
		<isNotEmpty prepend="AND" property="sub_p_decline">
			ogc_fid IN
			<iterate property="sub_p_decline" open="(" close=")"
				conjunction=","> #sub_p_decline[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) ,
		st_transform(A.the_geom, 5179)) AND ST_Area(ST_Intersection(B.geom,
		A.the_geom)) >= st_area(B.geom)/2
		ORDER BY ogc_fid
	</select>
	<select id="gisinfoDAO.gis_data_detail_6"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT A.subway_nm as kor_sub_nm,A.subway_no as represen_num,A.subway
		as subway,A.subway_dstrct as area_circle,
		A.subway_reprsnt_route as represen_route,A.atdrc as jache_gu,
		A.public_pbtrnsp as public_transport,A.scn as history,A.crs_sctn as
		intersection,A.crs_route as intersection_route,
		A.bus_sttn as bus_jun,A.nearby_road as
		near_load,upis,road_bt,ST_X(ST_PointOnSurface(A.the_geom)) AS
		addr_x, ST_Y(ST_PointOnSurface(A.the_geom)) AS addr_y,
		ST_AsText(A.the_geom) AS geom_as
		FROM
		landsys_gis.pbtrnsp_statn_cfr_legacy A, (SELECT pnu as a1, the_geom as
		geom FROM landsys_gis.ctnu_lgstr_su WHERE pnu = #pnu#) B
		WHERE
		subway_reprsnt_route = #public_transport_val#
		<isNotEmpty prepend="AND" property="public_transport">
			ogc_fid IN
			<iterate property="public_transport" open="(" close=")"
				conjunction=","> #public_transport[]#::integer </iterate>
		</isNotEmpty>
		AND st_intersects(st_transform(B.geom, 5179) ,
		st_transform(A.the_geom, 5179)) AND ST_Area(ST_Intersection(B.geom,
		A.the_geom)) >= st_area(B.geom)/2
		ORDER BY ogc_fid
	</select>

	<!-- 테이블 일원화된 관계로 현재 쿼리 사용X -->
	<select id="gisinfoDAO.gis_data_word1_bak"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT * FROM
		(SELECT
		(select signgu_korean_nm as sig_kor_nm from landsys_gis.signgu_administ_bndry
		B where A.signgu_code = B.signgu_code group by B.signgu_code,
		B.signgu_korean_nm) AS sig,
		(select emd_korean_nm as emd_kor_nm from landsys_gis.emd_administ_bndry B
		where A.signgu_code||LEFT(A.lad_locplc_code, 3) = B.emd_code group by
		B.emd_code, B.emd_korean_nm) AS emd,
		CASE
		WHEN A.lad_se = '2' THEN '산'
		ELSE '' END AS land_gbn,
		A.mnnm::integer, A.slno::integer,
		pnilp,
		(SELECT name FROM sh_code B WHERE type = 'JIMOK' AND A.lndcgr_code = B.code)
		AS jimok,
		plot_ar,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc_1 = B.code) AS
		spfc1,
		(SELECT name FROM sh_code B WHERE type = 'SPFC' AND A.spfc_2 = B.code) AS
		spfc2,
		(SELECT name FROM sh_code B WHERE type = 'LAND_USE' AND A.lad_use = B.code)
		AS land_use,
		(SELECT name FROM sh_code B WHERE type = 'GEO_HL' AND A.tpgrph_hg = B.code) AS
		geo_hl,
		(SELECT name FROM sh_code B WHERE type = 'GEO_FORM' AND A.tpgrph_frm = B.code)
		AS geo_form,
		(SELECT name FROM sh_code B WHERE type = 'ROAD_SIDE' AND A.road_side =
		B.code) AS road_side,
		stdmt,
		pnu,
		'1'::text AS jo
		FROM landsys_gis.pnilp A
		WHERE A.pnu = #pnu#) AA
		LEFT JOIN
		(SELECT '1'::text AS jo, adres as a3, '' as a4 FROM landsys_gis.ctnu_lgstr_su
		B WHERE B.pnu = #pnu#) BB
		ON AA.jo = BB.jo
		LEFT JOIN
		(SELECT '1'::text AS jo, posesn_se_nm as a11 FROM landsys_gis.LAD_FRTL_INFO C
		WHERE C.pnu = #pnu#) CC
		ON AA.jo = CC.jo
		LEFT JOIN
		(SELECT '1'::text AS jo, spcfc_nm_one as a20 FROM landsys_gis.LAD_OLNLP D
		WHERE D.pnu = #pnu#) DD
		ON AA.jo = DD.jo
	</select>
	
	<select id="gisinfoDAO.gis_data_word1"
		parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		SELECT * FROM
		(SELECT
		(select signgu_korean_nm as sig_kor_nm from landsys_gis.signgu_administ_bndry
		B where A.signgu_code = B.signgu_code group by B.signgu_code,
		B.signgu_korean_nm) AS sig,
		(select emd_korean_nm as emd_kor_nm from landsys_gis.emd_administ_bndry B
		where LEFT(A.pnu, 8) = B.emd_code group by
		B.emd_code, B.emd_korean_nm) AS emd,
		CASE
		WHEN A.regstr_se_code = '2' THEN '산'
		ELSE '' END AS land_gbn,
		--A.mnnm::integer, A.slno::integer,
		pnilp,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'JIMOK' AND s.lndcgr_code = B.mlsfc_code) AS jimok,
		A.lad_ar as parea,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND s.spfc_code_1 = B.mlsfc_code) as spfc1,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'SPFC' AND s.spfc_code_2 = B.mlsfc_code) as spfc2,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'LAND_USE' AND s.lad_use_sittn_code = B.mlsfc_code) AS land_use,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_HL' AND s.tpgrph_hg_code = B.mlsfc_code) as geo_hl,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'GEO_FORM' AND s.tpgrph_frm_code = B.mlsfc_code) AS geo_form,
		(SELECT mlsfc FROM landsys_adm.tc_brmp B WHERE lclas_code = 'ROAD_SIDE' AND s.road_side_code = B.mlsfc_code) AS road_side,
		A.stdmt,
		A.pnu,
		'1'::text AS jo
		FROM landsys_gis.pnilp A,
		landsys_gis.lad_chartr_info s
		WHERE A.pnu = #pnu#
		AND A.pnu = s.pnu
		) AA
		LEFT JOIN
		(SELECT '1'::text AS jo, adres as a3, '' as a4 FROM landsys_gis.ctnu_lgstr_su
		B WHERE B.pnu = #pnu#) BB
		ON AA.jo = BB.jo
		LEFT JOIN
		(SELECT '1'::text AS jo, posesn_se_nm as a11 FROM landsys_gis.lad_frtl_info_su_golnd_publnd C
		WHERE C.pnu = #pnu#) CC
		ON AA.jo = CC.jo
		LEFT JOIN
		(SELECT '1'::text AS jo, spfc_nm_1 as a20 FROM landsys_gis.LAD_OLNLP D
		WHERE D.pnu = #pnu#) DD
		ON AA.jo = DD.jo
	</select>
	
	<select id="gisinfoDAO.search_build_list" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		select
			ST_X(ST_Centroid(the_geom)) AS addr_x
			,ST_Y(ST_Centroid(the_geom)) AS addr_y
			,ST_AsText(the_geom) AS geom
			,case WHEN spcl_se_code  = '3' THEN concat(legaldong_nm,'(',spcl_se_nm ,')')
			  WHEN spcl_se_code  = '2' THEN concat(legaldong_nm,' ',spcl_se_nm,lnm)
			  WHEN spcl_se_code  = '1' THEN concat(legaldong_nm,' ',lnm)
			END AS addr
			,*  
		from landsys_gis.prpos_buld_info pbi 
		where
		
		<isEmpty property="emd">
			SUBSTRING(legaldong_code , 1,  5) = #sig#
		</isEmpty>
		<isNotEmpty property="emd"> 
			SUBSTRING(legaldong_code , 1,  8) = #emd#
		</isNotEmpty>
		and set_buld_se_code = #fs_setBuldSe#				--집합건물 여부
		and main_prpos_code = lpad(#fs_mainPrpos#,5,'0')  	--주용도코드
		<isNotEmpty prepend="AND" property="fs_subPrpos">
				detail_prpos_code IN   
				<iterate property="fs_subPrpos" open="(" close=")" conjunction=",">
					lpad(#fs_subPrpos[]# ,5,'0')
				</iterate>
				/*세부용도*/
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="compet_de">
			use_confm_de = #compet_de#						--사용승인일
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="num_parea_1">
	    			<![CDATA[ bldste_ar >= (#num_parea_1#)::double precision /*건물 대지면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="num_parea_2">
	    			<![CDATA[ bdtldr <= (#num_parea_2#)::double precision /*건물 대지면적*/ ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="num_barea_1">
	    			<![CDATA[ buld_bildng_ar >= (#num_barea_1#)::double precision /*건물 건축면적*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="num_barea_2">
	    			<![CDATA[ buld_bildng_ar <= (#num_barea_2#)::double precision /*건물 건축면적*/ ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="num_far_1">
	    			<![CDATA[ measrmt_rt >= (#num_far_1#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="num_far_2">
	    			<![CDATA[ measrmt_rt <= (#num_far_2#)::double precision /*용적률*/ ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="num_bcr_1">
	    			<![CDATA[ bdtldr >= (#num_bcr_1#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="num_bcr_2">
	    			<![CDATA[ bdtldr <= (#num_bcr_2#)::double precision /*건폐율*/ ]]>
		</isNotEmpty>
	</select>
	
	<select id="gisinfoDAO.search_price_pnilp" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*건축물검색 상세정보 조회 - 개별공시지가*/
		select 
			pnu,
			pnilp,
			stdyy, --기준연도
			stdmt, --기준월
			data_stdde, --데이터 기준일자
			pstyr_1_olnlp,
			pstyr_2_olnlp,
			pstyr_3_olnlp,
			pstyr_4_olnlp
		from landsys_gis.pnilp p 
		where pnu = #pnu#
	</select>
	
	<select id="gisinfoDAO.search_price_indvdlz_house" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*건축물검색 상세정보 조회 - 개별주택가격*/
		select 
			pnu
			,stdyy --기준연도
			,stdmt --기준월
			,data_stdde --데이터 기준일자
			,house_pc
			,buld_calc_ar
			,pstyr_1_house_pc
			,pstyr_2_house_pc
			,pstyr_3_house_pc
			,pstyr_4_house_pc
		from landsys_gis.indvdlz_house_pc_info
		where pnu = #pnu#
	</select>
	
	<!-- select  
			pnu
			,stdyy 기준연도
			,stdmt 기준월
			,data_stdde 데이터 기준일자
			,copertn_house_se_nm
			,aphus_nm
			,avrg_potvale
			,all_potvale
			,unit_ar_pc
			,calc_copertn_house_ho_co
			,pstyr_1_avrg_potvale
			,pstyr_2_avrg_potvale
			,pstyr_3_avrg_potvale
			,pstyr_4_avrg_potvale
		from landsys_gis.copertn_house_pc_info
		where pnu = #pnu# -->
	<select id="gisinfoDAO.search_price_copertn_house" parameterClass="GisBasicVO" resultClass="java.util.HashMap">
		/*건축물검색 상세정보 조회 - 공동주택가격*/
		select 
			a.gis_buld_unity_idntfc_no
			,a.buld_aptcmpl_nm
			,b.*
		from (
			select the_geom
				,gis_buld_unity_idntfc_no
				,buld_aptcmpl_nm
				from landsys_gis.prpos_buld_info gbui
			where innb = #pnu#
		)a,(
			select 
				ST_AsText(the_geom) convert_geom 
				,pnu
				,stdyy --기준연도
				,stdmt --기준월
				,data_stdde --데이터 기준일자
				,copertn_house_se_nm
				,aphus_nm
				,avrg_potvale
				,all_potvale
				,unit_ar_pc
				,calc_copertn_house_ho_co
				,pstyr_1_avrg_potvale
				,pstyr_2_avrg_potvale
				,pstyr_3_avrg_potvale
				,pstyr_4_avrg_potvale
			from landsys_gis.copertn_house_pc_info 
			where pnu = #pnu#
		)b
		where 
			 ST_Contains(the_geom,ST_GEOMFROMTEXT(convert_geom,4326))
			 order by buld_aptcmpl_nm
	</select>
</sqlMap>