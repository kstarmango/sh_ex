<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="admin.progrm">

	<select id="admin.progrm.selectProgrmAuthList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			/* 권한 조회1 */
			SELECT P_AUTH_NO, 
				   AUTH_DC as auth_desc, 
				   ADMIN_YN, 
				   BASS_YN, 
				   USE_YN,
				   LANDSYS_ADM.FN_DECRYPT(INS_USER, #KEY#) AS INS_USER, 
				   LANDSYS_ADM.FN_DECRYPT(UPD_USER, #KEY#) AS UPD_USER, 
				   TO_CHAR(INS_DT, 'YYYY/MM/DD') AS INS_DT, 
				   TO_CHAR(UPD_DT, 'YYYY/MM/DD') AS UPD_DT
			  FROM LANDSYS_ADM.TB_PROGRM_AUTH_MNG
			 WHERE 1 = 1
		]]>
		<isNotEmpty  prepend="AND" property="USE_YN">
				   USE_YN = #USE_YN#
		</isNotEmpty>
		<isNotEmpty  prepend="AND" property="P_AUTH_NO">
				   P_AUTH_NO = #P_AUTH_NO#
		</isNotEmpty>				
	</select>
	
	<select id="admin.progrm.selectProgrmAuthPagingList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			/* 권한 조회2 */
			SELECT * 
			  FROM (		
			    	SELECT ROW_NUMBER() 
			    	<isEqual prepend="OVER" property="PAGE_ORDER" compareValue="ASC">
							       (ORDER BY INS_DT ASC) AS RNO,
					</isEqual>
					<isEqual prepend="OVER" property="PAGE_ORDER" compareValue="DESC">
							       (ORDER BY INS_DT DESC) AS RNO,
					</isEqual>
					<![CDATA[ 
			    	       AA.*,
			    	       (SELECT COUNT(USER_ID) FROM LANDSYS_ADM.TB_USER_INFO WHERE P_AUTH_NO = AA.P_AUTH_NO) AUTH_USERS
			    	  FROM (			
								SELECT P_AUTH_NO, 
									   AUTH_DC as auth_desc, 
									   ADMIN_YN, 
									   BASS_YN, 
									   USE_YN,
									   LANDSYS_ADM.FN_DECRYPT(INS_USER, #KEY#) AS INS_USER, 
									   LANDSYS_ADM.FN_DECRYPT(UPD_USER, #KEY#) AS UPD_USER, 
									   TO_CHAR(INS_DT, 'YYYY/MM/DD HH24:MI') AS INS_DT, 
									   TO_CHAR(UPD_DT, 'YYYY/MM/DD HH24:MI') AS UPD_DT
								  FROM LANDSYS_ADM.TB_PROGRM_AUTH_MNG
								 WHERE 1 = 1
		]]>
							<isNotEmpty  prepend="AND" property="USE_YN">
									   USE_YN = #USE_YN#
							</isNotEmpty>
		<![CDATA[							
			    	       ) AA
		    	   ) AAA
	    	 WHERE AAA.RNO BETWEEN #FIRST_INDEX# AND #LAST_INDEX#		
		]]>	    	 							
	</select>
	
    <select id="admin.progrm.selectProgrmAuthPagingListCount" parameterClass="java.util.HashMap"  resultClass="int">
		<![CDATA[
			/* 권한 조회2 갯수 */
			SELECT COUNT(P_AUTH_NO) AS AUTH_COUNT
			  FROM LANDSYS_ADM.TB_PROGRM_AUTH_MNG
			 WHERE 1 = 1
		]]>								 
		<isNotEmpty  prepend="AND" property="USE_YN">
				   USE_YN = #USE_YN#
		</isNotEmpty>    
	</select>
		
    <update id="admin.progrm.updateProgrmAuth" parameterClass="java.util.HashMap">
	    <![CDATA[
			/* 권한 수정 */	
			UPDATE LANDSYS_ADM.TB_PROGRM_AUTH_MNG
			   SET
		]]>								 
		<isNotEmpty  prepend="" property="AUTH_DESC">
				   AUTH_DC = #AUTH_DESC#,
		</isNotEmpty>  
		<isNotEmpty  prepend="" property="ADMIN_YN">
				   ADMIN_YN = #ADMIN_YN#,
		</isNotEmpty>
		<isNotEmpty  prepend="" property="BASS_YN">
				   BASS_YN  = #BASS_YN#,
		</isNotEmpty>
		<isNotEmpty  prepend="" property="USE_YN">
				   USE_YN   = #USE_YN#,
		</isNotEmpty>
		<![CDATA[
				   UPD_USER  = LANDSYS_ADM.FN_ENCRYPT(#UPD_USER#, #KEY#),
				   UPD_DT    = CURRENT_TIMESTAMP
			 WHERE P_AUTH_NO = #P_AUTH_NO#    
		]]>
	</update>
	
	<insert id="admin.progrm.insertProgrmAuth" parameterClass="java.util.HashMap">
		<selectKey resultClass="String" keyProperty="SEQ">
		  	/* 일렬번호 생성 */
			SELECT #PREFIX# || LPAD(MAX_SEQ, 20 - LENGTH(#PREFIX#) - LENGTH(MAX_SEQ), '0') AS SEQ
			  FROM (
			  		SELECT (COUNT(P_AUTH_NO) + 1)::varchar AS MAX_SEQ 
					  FROM LANDSYS_ADM.TB_PROGRM_AUTH_MNG
				   ) A
		</selectKey>
		
    	<![CDATA[
	    	/* 권한 등록 */
	    	INSERT INTO LANDSYS_ADM.TB_PROGRM_AUTH_MNG
	    	(
	    		P_AUTH_NO,
	    		AUTH_DC,
			    ADMIN_YN, 
			    BASS_YN, 
			    USE_YN,
			    INS_USER, 
			    UPD_USER, 
			    INS_DT, 
			    UPD_DT	    		
	    	)
	    	VALUES
	    	(
	    		#SEQ#,
			   	#AUTH_DESC#,
			   	#ADMIN_YN#,
			  	#BASS_YN#,
				#USE_YN#,
				LANDSYS_ADM.FN_ENCRYPT(#INS_USER#, #KEY#),
				LANDSYS_ADM.FN_ENCRYPT(#INS_USER#, #KEY#),
				CURRENT_TIMESTAMP,
				CURRENT_TIMESTAMP
	    	)
		]]>
	</insert>
	
	<select id="admin.progrm.selectProgrmListByAuthNo" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
		<![CDATA[
	    	/* 프로그램 목록 */		
			SELECT RNO,
				   PROGRM_NO, 
				   P_PROGRM_NO, 
				   PROGRM_NM, 
				   ADMIN_YN, 
				   VIEW_YN 
			  FROM (		   
						/* WITH RECURSIVE PROGRM(PROGRM_NO, P_PROGRM_NO, PROGRM_NM, PROGRM_URL, LEVEL, PATH, CYCLE) AS 
						(
							SELECT G.PROGRM_NO, 
								   G.P_PROGRM_NO, 
								   G.PROGRM_NM,
								   G.PROGRM_URL, 
								   0, 
								   ARRAY[G.PROGRM_ORDR], 
								   FALSE, 
								   MENU_YN, 
								   ADMIN_YN
							  FROM LANDSYS_ADM.TB_PROGRM_MNG G
							 WHERE (G.P_PROGRM_NO = '' OR G.P_PROGRM_NO IS NULL)
					           AND G.USE_YN = 'Y'
					           
							UNION ALL
					
							SELECT G.PROGRM_NO, G.P_PROGRM_NO, G.PROGRM_NM, G.PROGRM_URL, LEVEL + 1, ARRAY_APPEND(PATH, G.PROGRM_ORDR)  , G.PROGRM_ORDR = ANY(PATH), G.MENU_YN, G.ADMIN_YN
							  FROM LANDSYS_ADM.TB_PROGRM_MNG G, PROGRM SB
							 WHERE G.P_PROGRM_NO = SB.PROGRM_NO
							   AND G.USE_YN = 'Y'
							   AND NOT CYCLE
						) */	
						WITH RECURSIVE PROGRM(PROGRM_NO, P_PROGRM_NO, PROGRM_NM, PROGRM_URL, PROGRM_ORDER, LEVEL, PATH, CYCLE) AS 
						(
							SELECT G.PROGRM_NO, G.P_PROGRM_NO, G.PROGRM_NM, G.PROGRM_URL, G.PROGRM_ORDR, 0, ARRAY[substring(G.PROGRM_NO,7)::int], FALSE, MENU_YN, ADMIN_YN, PROGRM_CLASS, PROGRM_PARAM, POP_YN, POP_FUNC
							  FROM landsys_adm.TB_PROGRM_MNG G
							 WHERE (G.P_PROGRM_NO = '' OR G.P_PROGRM_NO IS NULL)
							   AND G.USE_YN = 'Y'
							   
							UNION ALL
					
							SELECT G.PROGRM_NO, G.P_PROGRM_NO, G.PROGRM_NM, G.PROGRM_URL, G.PROGRM_ORDR, LEVEL + 1, 
							CASE 
				               WHEN level+1 = 2 THEN PATH || G.PROGRM_ORDR::int
				               ELSE PATH || substring(G.PROGRM_NO, 7)::int
				           END AS PATH, 
				           CASE 
				               WHEN level+1 = 2 THEN G.PROGRM_ORDR::int = ANY(PATH)
				               ELSE substring(G.PROGRM_NO, 7)::int = ANY(PATH)
				           END AS CYCLE,
							G.MENU_YN, G.ADMIN_YN, G.PROGRM_CLASS, G.PROGRM_PARAM, G.POP_YN, G.POP_FUNC
							  FROM LANDSYS_ADM.TB_PROGRM_MNG G, PROGRM SB
							 WHERE G.P_PROGRM_NO = SB.PROGRM_NO
							   AND G.USE_YN = 'Y' 
							   AND NOT CYCLE
						) 
						  SELECT ROW_NUMBER() OVER(ORDER BY PATH) AS RNO,
						         PG.PROGRM_NO, 
						  		 PG.P_PROGRM_NO, 
						  		 LPAD('', 5*6*CAST(LEVEL AS INT), '&nbsp;') || PG.PROGRM_NM AS PROGRM_NM, 
						  		 PG.ADMIN_YN, 
						  		 CASE WHEN PAM.PROGRM_NO IS NULL THEN 'N' ELSE 'Y' END AS VIEW_YN, 
						  		 LEVEL, 
						  		 PATH
							FROM PROGRM PG 
								 LEFT OUTER JOIN 
								 LANDSYS_ADM.TB_PROGRM_AUTH_MAPNG PAM 
								 ON PG.PROGRM_NO = PAM.PROGRM_NO AND PAM.P_AUTH_NO = #P_AUTH_NO#
						   WHERE PG.MENU_YN = 'Y' 
				   ) A
	      ORDER BY PATH
		]]>			 
	</select>
	
    <insert id="admin.progrm.insertProgrmListByAuthNo" parameterClass="java.util.HashMap">
	    <![CDATA[
			/* 프로그램 목록 등록 */
			INSERT INTO LANDSYS_ADM.TB_PROGRM_AUTH_MAPNG
			(
				P_AUTH_NO,
				PROGRM_NO,
			    INS_USER, 
			    UPD_USER, 
			    INS_DT, 
			    UPD_DT
			)
		]]>			
		<dynamic>
		<iterate prepend="VALUES" conjunction=", " property="PROGRMS">
			( 
				#P_AUTH_NO#,
				#PROGRMS[]#,
				LANDSYS_ADM.FN_ENCRYPT(#INS_USER#, #KEY#),
				LANDSYS_ADM.FN_ENCRYPT(#INS_USER#, #KEY#),
				CURRENT_TIMESTAMP,
				CURRENT_TIMESTAMP	
			)
		
		</iterate>
		</dynamic>
	</insert>

	<delete id="admin.progrm.deleteProgrmListByAuthNo" parameterClass="java.util.HashMap">
	    <![CDATA[
			/* 프로그램 목록 삭제 */		
			DELETE 
			  FROM LANDSYS_ADM.TB_PROGRM_AUTH_MAPNG 
			 WHERE P_AUTH_NO = #P_AUTH_NO#
		]]>			   
	</delete>

    <insert id="admin.progrm.insertProgrmListBackupByAuthNo" parameterClass="java.util.HashMap">
		<selectKey resultClass="String" keyProperty="SEQ">
		  	/* 일렬번호 생성 */
			SELECT #PREFIX# || LPAD(MAX_SEQ, 20 - LENGTH(#PREFIX#) - LENGTH(MAX_SEQ), '0') AS SEQ
			  FROM (
			  		SELECT (COALESCE(REPLACE(MAX(LOG_NO), #PREFIX#, ''), '0')::integer + 1)::varchar AS MAX_SEQ 
					  FROM LANDSYS_ADM.TH_PROGRM_AUTH_MAPNG			
				   ) A
		</selectKey>
		    
	    <![CDATA[
			/* 프로그램 목록 백업  */
			INSERT INTO LANDSYS_ADM.TH_PROGRM_AUTH_MAPNG
			(
				LOG_NO,
			    LOG_INS_USER,
			    LOG_INS_DT,
				P_AUTH_NO,
				PROGRM_NO,
			    INS_USER, 
			    UPD_USER, 
			    INS_DT, 
			    UPD_DT
			)
			 SELECT #SEQ#,
					LANDSYS_ADM.FN_ENCRYPT(#INS_USER#, #KEY#),
					CURRENT_TIMESTAMP,	
					P_AUTH_NO,
					PROGRM_NO,
			    	INS_USER, 
			    	UPD_USER, 
			    	INS_DT, 
			    	UPD_DT
			   FROM LANDSYS_ADM.TB_PROGRM_AUTH_MAPNG
			  WHERE P_AUTH_NO = #P_AUTH_NO#
		]]>				  
	</insert>

	<select id="admin.progrm.selectProgrmList" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
		<![CDATA[
			/* 프로그램 목록 조회  */
			WITH RECURSIVE PROGRM(PROGRM_NO, P_PROGRM_NO, PROGRM_NM, PROGRM_URL, PROGRM_ORDER, PROGRM_DESC, PROGRM_PARAM, PROGRM_CLASS, LEVEL, PATH, CYCLE) AS 
			(
				SELECT G.PROGRM_NO, 
					   G.P_PROGRM_NO, 
					   G.PROGRM_NM,
					   G.PROGRM_URL,
					   G.PROGRM_ORDR,
					   G.PROGRM_DC,
					   G.PROGRM_PARAM,
					   G.PROGRM_CLASS,
					   0, 
					   ARRAY[G.PROGRM_ORDR], 
					   FALSE, 
					   MENU_YN, 
					   ADMIN_YN,
					   STATS_YN,
					   USE_YN,
					   LANDSYS_ADM.FN_DECRYPT(G.INS_USER, #KEY#) AS INS_USER,
					   TO_CHAR(G.INS_DT, 'YYYY-MM-DD HH24:MI')   AS INS_DT,
					   LANDSYS_ADM.FN_DECRYPT(G.UPD_USER, #KEY#) AS UPD_USER,
					   TO_CHAR(G.UPD_DT, 'YYYY-MM-DD HH24:MI')   AS UPD_DT
				  FROM LANDSYS_ADM.TB_PROGRM_MNG G
				 WHERE (G.P_PROGRM_NO = '' OR G.P_PROGRM_NO IS NULL)
		           
				UNION ALL
		
				SELECT G.PROGRM_NO, G.P_PROGRM_NO, G.PROGRM_NM, G.PROGRM_URL, G.PROGRM_ORDR, G.PROGRM_DC, G.PROGRM_PARAM, G.PROGRM_CLASS,
					   LEVEL + 1, ARRAY_APPEND(PATH, G.PROGRM_ORDR), G.PROGRM_ORDR = ANY(PATH), G.MENU_YN, G.ADMIN_YN, G.STATS_YN, G.USE_YN,
					   LANDSYS_ADM.FN_DECRYPT(G.INS_USER, #KEY#) AS INS_USER,
					   TO_CHAR(G.INS_DT, 'YYYY-MM-DD HH24:MI')   AS INS_DT,
					   LANDSYS_ADM.FN_DECRYPT(G.UPD_USER, #KEY#) AS UPD_USER,
					   TO_CHAR(G.UPD_DT, 'YYYY-MM-DD HH24:MI')   AS UPD_DT				   
				  FROM LANDSYS_ADM.TB_PROGRM_MNG G, PROGRM SB
				 WHERE G.P_PROGRM_NO = SB.PROGRM_NO
				   AND NOT CYCLE
			)			
			 SELECT PG.*, 
			 		LPAD('', 5*6*CAST(PG.LEVEL AS INT), '&nbsp;') SPACE, 
			 		LPAD('', 5*6*CAST(PG.LEVEL AS INT), '&nbsp;') || PG.PROGRM_NM AS VIEW_PROGRM_NM
			   FROM PROGRM PG
			  WHERE 1 = 1
			  	   
		]]>				  
		<isNotEmpty  prepend="AND" property="USE_YN">
				   USE_YN = #USE_YN#
		</isNotEmpty>	
		<isNotEmpty  prepend="AND" property="MENU_YN">
				   MENU_YN = #MENU_YN#
		</isNotEmpty>
		<isNotEmpty  prepend="AND" property="ADMIN_YN">
				   ADMIN_YN = #ADMIN_YN#
		</isNotEmpty>		
		<isNotEmpty  prepend="AND" property="STATS_YN">
				   STATS_YN = #STATS_YN#
		</isNotEmpty>		
		<isNotEmpty  prepend="AND" property="P_PROGRM_NO">
				   P_PROGRM_NO = #P_PROGRM_NO#
		</isNotEmpty>
		  ORDER BY PATH				
	</select>	
	
	<select id="admin.progrm.selectProgrmNumById" parameterClass="java.util.HashMap"  resultClass="int">
		<![CDATA[
			/* 프로그램 목록 개수 by ID */
			SELECT COUNT(PROGRM_NO) AS CNT
			  FROM LANDSYS_ADM.TB_PROGRM_MNG G
			 WHERE G.P_PROGRM_NO = #P_PROGRM_NO#
		]]>				  
	</select>			
						
</sqlMap>